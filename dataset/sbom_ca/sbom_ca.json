{"0": {"meta": {"StartDate": "2022-11-08 09:18:47", "EndDate": "2022-11-08 09:22:22", "Status": "IP Address", "Progress": "100", "Duration": "215", "Finished": "True", "RecordedDate": "2022-11-08 09:22:24", "ResponseID": "R_3NP6V06n6Ea5N5Z", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["Other (please specify)"], "other": "I am aware of SBOMs, but don't use them."}}, "shared": {"S1": "A SBOM lists all dependencies of a project. The goal is to actually be aware of implict dependencies.", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Disagree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Read the description of the issue and possibly review the patch to determine if it's exploitable or not in our deployments.", "SC9": "pip-tools makes it easy to get a flat list of all the dependencies we use. We use system packages for nearly everything else."}, "demographics": {"Q1": "", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": ""}}, "1": {"meta": {"StartDate": "2022-11-08 09:33:25", "EndDate": "2022-11-08 09:49:12", "Status": "IP Address", "Progress": "100", "Duration": "947", "Finished": "True", "RecordedDate": "2022-11-08 09:49:14", "ResponseID": "R_1P776djwnwYYHqv", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "They are the bill of materials, the itemise all components, versions, licenses, etc for all parts of an application. A common reason to do this is vulnerability scanning and ensuring one can match CVEs to exact versions of libraries, or to report on FOSS licenses used by components to ensure compliance.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "", "S4": "Disagree", "S5": "Tooling is difficult and not native to languages, which means third party tools must be used which have an inconsistent quality across languages.", "S6": "Provide better tooling.\n\nAn example may be like https://go.dev/blog/vuln which is nothing to do with SBOM, but what it does do is take a problem area \"it's hard to do CVE scanning and make sense of the noise\" and then internalises into the tool the complexity of this in a way that a single language accepts this as a standard tool... once accepted as a standard tool it proves more rapid improvements as the industry effort is focused on the one area.", "S7": "Strongly disagree", "S8": "They all seem partially complete and partially deficient... whilst also being incredibly complicated for what they are (attempting to solve it for every language and framework in one go).\n\nFeels very much like SBOM generation should have language specific tooling that is complete for that language alone.\n\nCross-language effort should only focus on taking the SBOM output of multiple tools and merging it into a single report. Of course, providers of software don't tend to do this as they prefer to be the complete owner (commercially) of a solution, rather than a single piece of the puzzle.", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Github Actions causes a post-commit analysis which produces the SBOM and then we process that to determine if a license of any added dependencies is out of policy for our organisation... i.e. we won't accept proprietary licenses - needs to be a FOSS recognised license.", "C7": "Inconsistent output from different tools, i.e. some focused on licenses, some focused on version reporting.\n\nGaps in tools, i.e. reporting on the backend code but not doing an adequate job of reporting on frontend code."}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Agree", "E3": "Agree", "E4": {"answers": ["SPDX"], "other": ""}, "E5": {"1": "2", "2": "5", "3": "4", "4": "3", "5": "6", "6": "1", "7": "7", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "I consider them insecure by default.\n\nI seek to either read the code for the paths I'm concerned with, write my own testing, or to not use a dependency.\n\nEven when I use a dependency I will seek to sanitise all input so that I believe it's safe even if the dependency has flaws.", "SC9": "go mod"}, "demographics": {"Q1": "23", "Q2": {"answers": "IT Manager", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Others (please specify):"], "other": "Go, Rust"}, "Q5": {"answers": ["Operating systems", "Web applications", "Mobile applications", "Desktop applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "All... manufacturing, health, technology... I have code in Microsoft Excel, I have code in Cloudflare... anyone who has used computers in the last decade has touched some of my code, including in secure industries.", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "2": {"meta": {"StartDate": "2022-11-08 11:00:48", "EndDate": "2022-11-08 11:33:03", "Status": "IP Address", "Progress": "100", "Duration": "1935", "Finished": "True", "RecordedDate": "2022-11-08 11:33:03", "ResponseID": "R_pSFEcWrIVGPzkcN", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "Enumerated list of software components (e.g. open-source packages, commercial code bases, etc.) that come together to form a software package. Purposes could be for systematic root cause debugging, tracking licensing/attribution requirements, documentation.", "S2": {"answers": [""], "other": ""}, "S3": "Component name, repo URL, license name / URL, object / source identifier, dynamically linked vs. redistributed, modified or unmodified (if from third-party).", "S4": "Strongly agree", "S5": "Inconsistency in format / included fields, automated software tools to generate SBOMs and verify compatibility.", "S6": "Software tool to generate SBOMs.", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": ["SBOM Tool creators"], "other": ""}, "SM3": "Github (or similar) templates / verification."}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Neutral", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Writing test cases / code review.", "SC9": "Record along the way, parse through code when preparing for publication."}, "demographics": {"Q1": "", "Q2": {"answers": "Other (please specify):", "other": "Licensing Officer"}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "No", "Q9": "Yes, informal", "Q10": ""}}, "3": {"meta": {"StartDate": "2022-11-08 12:06:42", "EndDate": "2022-11-08 12:49:44", "Status": "IP Address", "Progress": "100", "Duration": "2581", "Finished": "True", "RecordedDate": "2022-11-08 12:49:45", "ResponseID": "R_1JUtR4olDrf7HbR", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "Inventory of components for software development and deployment. Important for visibility and risk management.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "", "S4": "Agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "Open/freely accessible SBOM database that would also include vulnerabilities for dependencies", "S9": {"1": "1", "2": "2", "3": "4", "4": "3", "5": "5", "6": "6", "other": ""}, "S10": "Decentralized and freely accessible/downloadable database"}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "", "C4": {"answers": "Once per month", "other": ""}, "C5": "Yes", "C6": "Aqua Trivy", "C7": "Hard to keep up to date and needs regular scans"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "By vulnerability severity", "SC9": "Aqua Trivy database"}, "demographics": {"Q1": "21", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Others (please specify):"], "other": "Go"}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "government, healthcare, software development", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "4": {"meta": {"StartDate": "2022-11-08 12:30:03", "EndDate": "2022-11-08 13:06:04", "Status": "IP Address", "Progress": "100", "Duration": "2161", "Finished": "True", "RecordedDate": "2022-11-08 13:06:05", "ResponseID": "R_3kcX5GVjOS0Bqsc", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Software Bill of Materials is a description of the component parts of a Distributed Package of Software, much like a list of ingredients you find on packaged foods.\n\nThe purpose of SBOMs is to provide transparency on software components used within the product.  This transparency allows for downstream consumers of the SBOM to identify security risks, legal licensing risks, and export restriction risks on the software consumed.  It also enables suppliers to accurately represent their own SBOMs for their products to their consumers by passing along information from upstream component SBOMs.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "Difficult question to answer in that there are so many use cases where SBOMs are a solution.  In SPDX, we identified 38 different use cases with different field requirements.\n\nThe most popular use cases are security vulnerability analysis and license obligation analysis.  These require some form of identification on each SBOM element - for example a PURL, GitOID, or Software Heritage ID.\n\nCertainly the NTIA minimum requirements for SBOMs are all important, especially supplier information.\n\nRelationship types between the component described in the SBOM and all of the other components in the SBOM are also important for many use cases (e.g. knowing if a component is used as for test or included in the production deployed code).", "S4": "Strongly agree", "S5": "'- Complexity - there are a lot of fields defined some of which are are only relevant to a small number of use cases\n- Underspecified and under documented - especially CycloneDX - it is hard to find a very detailed description of the fields in a form humans can understand\n- Too many standards - it's hard enough understanding 1 standard, let alone 3 or more", "S6": "Encourage interoperability between the standards\nDiscourage unnecessary competition between the standards\nIncrease the investment and/or volunteer effort in the documentation of the standards", "S7": "Neutral", "S8": "Increased investment in open source libraries that can be incorporated in end user commercial and open source tools.", "S9": {"1": "5", "2": "2", "3": "3", "4": "6", "5": "4", "6": "1", "other": "In repositories along with binaries (e.g. Maven Central)"}, "S10": "SBOMs need to both be verified themselves and they need to provide information to verify the code which is distributed.  For this reason, they can not be distributed in the same file.  Having them in a common repository for the distributed artifacts (be they binary, source or other) alongside the SBOM is a best fit for verifying the artifacts.  These artifact repositories are already in use and can easily be leveraged."}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "Satisfy requirements for my downstream customers and increases the adoption of the software I produce.", "P5": "SPDX tools\nSPDX Maven plugin\nCycloneDX libraries", "P7": "Yes", "P8": "Tied to the version of the software package produced + a globally unique ID generated at the time of release.", "P9": "Tried to generate SBOMs during development and ran into several tooling, performance and logistical issues (e.g. a new SBOM would be checked into source for even a 1 line change which always created merge conflicts).\n\nGenerating SBOMs during release worked much better.\n\nTooling support for different build environments didn't exist which required constructing SBOMs more manually - although this is getting much better."}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "Improves the accuracy of dependency information.\n\nVery valuable for identifying security vulnerabilities.", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Convert to a human readable spreadsheet\nUpload component information to OSV to understand vulnerabilities\n\nSPDX Tools\nSPDX to OSV", "C7": "Incompatible implementations of the spec (missing fields, invalid files)\nMultiple standards"}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain"], "other": ""}, "T5": "Agree", "T6": "SPDX Tools - Java\nSPDX Online Tools\nCycloneDX to SPDX\nSource Auditor Source Scanner"}, "standard_makers": {"SM2": {"answers": ["SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "Websites (e.g. spdx.dev)\nOpen collaborative platforms such as GitHub (e.g. github.com/spdx/spec)\nRealtime communications platforms such as Slack\nFormal standards bodies - e.g. ISO"}, "educators": {"E2": "Neutral", "E3": "Neutral", "E4": {"answers": ["SPDX"], "other": ""}, "E5": {"1": "1", "2": "5", "3": "4", "4": "2", "5": "6", "6": "3", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Dependency Trac, GitHub\n\nEvery source change is checked by a GitHub action\n\nDependency Trac is run on every release", "SC8": "Review the report, determine if the vulnerabilities applies based on the code usage", "SC9": "The package manager tools used by the software (e.g. NPM, Maven).  On occasion, will run a source scan to identify and libraries included in source not referenced by the package manager."}, "demographics": {"Q1": "40", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Java", "Javascript", "Others (please specify):"], "other": "Dart / Flutter"}, "Q5": {"answers": ["Operating systems", "Web applications", "Mobile applications", "Desktop applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "Technology (Computer hardware vendors, web conferencing providers, web based application developers)", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "5": {"meta": {"StartDate": "2022-11-09 02:05:41", "EndDate": "2022-11-09 02:23:10", "Status": "IP Address", "Progress": "100", "Duration": "1048", "Finished": "True", "RecordedDate": "2022-11-09 02:23:10", "ResponseID": "R_9mlyPsE52APF3RT", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "A \u201csoftware bill of materials\u201d (SBOM) has emerged as a key building block in software security and software supply chain risk management. A SBOM is a nested inventory, a list of ingredients that make up software components. ", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Strongly agree", "S5": "The de-facto industry standard for SBOMs is the Software Package Data Exchange (SPDX) standard, which many consider the \u201cofficial\u201d standard for SBOMs. However, you should be aware that SPDX is still an evolving standard managed by the Linux Foundation, with the latest release being v2.2.2. [1]\n\n\nReferences\n\n[1] https://www.activestate.com/blog/how-software-bill-of-materials-sboms-support-secure-development/", "S6": "I currently worked (developing code) on the SPDX standardization, which is part of the SBOM standards.\n\nFrom my side, I developed a method to convert common license names to SPDX ids.", "S7": "Strongly agree", "S8": "I need to investigate the tooling proposed within SBOM.", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Strongly agree", "E3": "Neutral", "E4": {"answers": ["SPDX"], "other": ""}, "E5": {"1": "1", "2": "3", "3": "4", "4": "5", "5": "6", "6": "2", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Strongly agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Working within FASTEN, we have a vulnerability producer that collects vulnerability information from NVD and CVE and injects this information into the FASTEN Knowledge Base (KB).\n\nThis information is then retrieved using the Rest API interface to the KB.", "SC9": "Several approaches for different programming languages (we covered Python, Java, and C).\n\nThrough dependency resolution, then generating call graphs for each dependency and merging them."}, "demographics": {"Q1": "", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": ""}}, "6": {"meta": {"StartDate": "2022-11-09 02:07:33", "EndDate": "2022-11-09 02:33:37", "Status": "IP Address", "Progress": "100", "Duration": "1564", "Finished": "True", "RecordedDate": "2022-11-09 02:33:37", "ResponseID": "R_3Gvw4BEgHtMjou7", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "Software Bill of Materials is a standard industry wide BOM specialised for the documentation of software packages.\n\nThis helps not only in versioning multi-package software projects but also in license management and package provenance.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "Package name, version, date of creation, list of packaged files and types, overall checksum for the package, author(s), company if appropriate, external references, licensing information.", "S4": "Agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "Better tooling support(e.g SBOM creation using GUI tools) for non technical users such as project administrators etc. \n\nIn my experience current tooling is weighted too much toward engineering personnel.", "S9": {"1": "2", "2": "1", "3": "3", "4": "4", "5": "5", "6": "6", "other": ""}, "S10": "SBOM's should ideally be in the package repository for inspection(automatic tools or humans). Note that 'repository' here means any format the software package is distributed in, i.e a git repository, tarball, etc."}, "producers": {"P2": {"answers": ["During each software build", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To provide others with information about my project"], "other": ""}, "P4": "More visible software project composition, provenance, licensing and dependency management.", "P5": "A software package I have developed for the Dart project ecosystem, this can be found here https://pub.dev/packages/sbom", "P7": "No", "P8": "", "P9": "Initially understanding the SPDX format, the SPDX specification although detailed can be difficult to interpret in some areas."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To learn more about other projects", "To make it easier to understand dependencies in complex projects"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain"], "other": ""}, "T5": "Disagree", "T6": "sbom, a package for the Dart ecosystem, here https://pub.dev/packages/sbom"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Neutral", "SC5": "No", "SC6": "", "SC7": "", "SC8": "These are usually addressed by upstream, in this case Google, Dart code itself is not really subject to vulnerabilities as it runs under control of a VM. ", "SC9": "I use the sbom package as stated earlier."}, "demographics": {"Q1": "38", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Other", "other": "HND/HNC"}, "Q4": {"answers": ["C / C++", "C#", "Others (please specify):"], "other": "Dart"}, "Q5": {"answers": ["Web applications", "Desktop applications", "Middleware", "Databases", "Others"], "other": "SCADA, industrial control"}, "Q7": "Transportation, defence, nuclear, commercial.", "Q6": "Both open source and closed source", "Q8": "No", "Q9": "No", "Q10": "Quarterly"}}, "7": {"meta": {"StartDate": "2022-11-09 08:14:59", "EndDate": "2022-11-09 08:29:50", "Status": "IP Address", "Progress": "100", "Duration": "891", "Finished": "True", "RecordedDate": "2022-11-09 08:29:51", "ResponseID": "R_1etaPjf7ww473XA", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "List of libraries, with their metadata, which includes licenses and other relevant information about its usage.", "S2": {"answers": [""], "other": ""}, "S3": "Name, author (name and email address), release date, licenses, embedded libraries, usage limitations, copyright.", "S4": "Strongly agree", "S5": "Lack of consolidated (and widely adopted) tools that generate a standard SBOM for software projects.", "S6": "Depends on who is \"we\". As a company, building internal tools and processes can mitigate the issue.\n\nAs a community, working with open source foundations and supporting initiatives like SPDX, OpenSSF and the TODO group is in my (very biased) opinion the way forward.", "S7": "Strongly disagree", "S8": "Supporting leading open source initiatives like SPDX, OpenSSF and the TODO group", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To meet software licensing requirements"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Disagree", "T6": "We have lately contributed https://www.finos.org/blog/introducing-finos-security-scanning , and we're looking into adopting https://github.com/oss-review-toolkit/ort . We also used WhiteSource (now Mend) in the past."}, "standard_makers": {"SM2": {"answers": ["Government bodies"], "other": ""}, "SM3": "It's the job of Government bodies to find the most effective way; definitely not an easy task."}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Strongly disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "ORT and OWASP Dependency Check, integrated with project's CI/CD system.\n\nWhen code changes - and on a scheduled plan - scanners are executed and results either email developers or fail the code change submission (ie Pull Request)", "SC8": "Reading more info about the CVE, reading the code and deciding if:\n- a new library version is needed/available\n- a switch of library must happen\n- a code update must happen\n- a new release must be done to address the CVE", "SC9": "Using the build tool of choice, ie npm, Maven, poetry, etc"}, "demographics": {"Q1": "22", "Q2": {"answers": "IT Manager", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications", "Mobile applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "Financial Services, Telecommunication, Education - primarily", "Q6": "Open source only", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "8": {"meta": {"StartDate": "2022-11-09 07:46:18", "EndDate": "2022-11-09 09:00:48", "Status": "IP Address", "Progress": "100", "Duration": "4470", "Finished": "True", "RecordedDate": "2022-11-09 09:00:49", "ResponseID": "R_1lt6DlQzUc9YCuQ", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "An SBOM defines what components a software artifact contains. They are used for multiple purposes, but especially to determine vulnerabilities and license compliance.", "S2": {"answers": ["SPDX", "CycloneDX", "Other (please specify)"], "other": "Syft"}, "S3": "Package:\n - name (including qualifiers like java groupId)\n - version\n - ecosystem (like npm, python)\n - evidence (optional, where this package was found)\n - file checksums (if applicable)\n", "S4": "Agree", "S5": "SBOM standards are currently pretty good, except SPDX needs arbitrary properties like CycloneDX has... SBOM generation tooling is less good.", "S6": "SPDX 2.3 has seemed to address the deficiencies in that format except it needs arbitrary properties, CycloneDX needs multiple CPEs. Other than things, the formats are pretty good.", "S7": "Neutral", "S8": "It is very hard to generate accurate SBOMs. Writing them manually is probably even worse. We need a way to generate accurate SBOMs given some software. Binaries like those built with go module tooling can include metadata directly in the binary itself to help this... ELF also has a way to include this information, but we need more of this for every binary type. ", "S9": {"1": "2", "2": "6", "3": "3", "4": "4", "5": "1", "6": "5", "other": ""}, "S10": "In a repository doesn't make sense... there may be multiple distributables with different SBOMs."}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "Syft. It's great! (disclaimer: I work on Syft)", "P7": "Yes", "P8": "We are building a migration tool for SBOM versions of Syft and SPDX formats.", "P9": "There is not enough information present: license information is not present, random binaries do not have any information to classify them."}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Grype, a vulnerability scanner. Anchore Enterprise -- an SBOM/software management system.", "C7": "Incomplete or inoperable data. Syft generates SBOMs in various formats which Grype can use but other tools generate very poor or very different SBOMs which do not have the data necessary to do accurate vulnerability scanning."}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX", "Other (please specify)"], "other": "Syft"}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain"], "other": ""}, "T5": "Strongly disagree", "T6": "Syft"}, "standard_makers": {"SM2": {"answers": ["SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "I don\u2019t know", "SC7": "Anchore Enterprise", "SC8": "Once we find a vulnerability, the team responsible for the code updates a dependency or otherwise notes the dependency as something that we can't fix yet", "SC9": "Syft can just run on itself, e.g.: `syft file:/path/to/syft`, which will find accurate go dependencies."}, "demographics": {"Q1": "20", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Javascript", "Others (please specify):"], "other": "go"}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "everything...", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "No", "Q10": "Quarterly"}}, "9": {"meta": {"StartDate": "2022-11-09 09:33:19", "EndDate": "2022-11-09 09:49:44", "Status": "IP Address", "Progress": "100", "Duration": "984", "Finished": "True", "RecordedDate": "2022-11-09 09:49:44", "ResponseID": "R_1M4HoMp9oXP92Jc", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "A SBOM is a machine-readable manifest describing the individual components that comprise a piece of software. ", "S2": {"answers": [""], "other": ""}, "S3": "I think this is domain specific, but in general: each \"dependency\" of the software in question, its version (or compatible version ranges), its license (or licenses), its \"source provenance\" (meaning where it was retrieved from), its \"artifact provenance\" (meaning where it was compiled or turned into its final consumable form), any known vulnerability reports, when it was released, its authors (names and emails), its packagers (names and emails), and a short human-readable description of the component.", "S4": "Neutral", "S5": "There are significant impedance mismatches between existing standards and what users actually want: existing standards don't necessarily correspond to the package or component model of every language ecosystem, don't necessarily include vulnerability information, etc. There is also a current lack of high quality language bindings/implementations for e.g. SPDX.", "S6": "More communication and cooperation with individual packaging communities to understand the underlying data model; more funding for existing specifications and implementations of those specifications.", "S7": "Neutral", "S8": "The tooling follows the standard -- once the standards are clarified and have better bindings/schemas, the tooling will be able to catch up. More practically, SBOM tooling needs more corporate and public funding.", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["CycloneDX"], "other": ""}, "T3": {"answers": ["To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "Other (please specify)"], "other": "I write tools that generate SBOMs; I don't currently consume them."}, "T4": {"answers": ["Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Neutral", "T6": "pip-audit is the main tool I work on. I've also contributed to CycloneDX's Python implementation and coordinated with the SPDX Python team."}, "standard_makers": {"SM2": {"answers": ["SBOM Format creators", "SBOM Tool creators"], "other": ""}, "SM3": "Any sort of public RFC process would be ideal."}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Neutral", "SC5": "No", "SC6": "", "SC7": "", "SC8": "I read the corresponding vulnerability reports, and triage based on importance or relevance to how I actually use the dependency.", "SC9": "I use my own tool (pip-audit) for Python, or built in dependency trackers for most other ecosystems."}, "demographics": {"Q1": "10", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "C / C++", "Others (please specify):"], "other": "Rust, Ruby"}, "Q5": {"answers": ["Operating systems", "Web applications", "Desktop applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "Package management, applied cryptography, compilers, endpoint security", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "11": {"meta": {"StartDate": "2022-11-10 02:20:12", "EndDate": "2022-11-10 02:33:50", "Status": "IP Address", "Progress": "100", "Duration": "817", "Finished": "True", "RecordedDate": "2022-11-10 02:33:51", "ResponseID": "R_3MrNOoshiY0ac9F", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "SBoMs are the recipe of what is built into software packages. They allow the consumer of the SBoM to see what is included, who built it, and what licence it has.", "S2": {"answers": ["SPDX", "SWID"], "other": ""}, "S3": "entity\nlicense\nidentity\nlinks", "S4": "Agree", "S5": "There are not many software libraries for parsing and converting SBoM entries. Some formats are just incompatible with certain usecases,e.g. you can't use SPDX with firmware as it's just too large.", "S6": "I think it will come with time, although funding from someone like the US government would speed things up.", "S7": "Agree", "S8": "I think some of the current tooling is actually pretty good.", "S9": {"1": "3", "2": "2", "3": "4", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": "If they're not included in the binary then they're very easy to \"get out of sync with reality\"."}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "Only with SBoM can we identify components affected by specific security issues.", "P5": "uSWID and goSWID", "P7": "Yes", "P8": "We use the version tag in the SWID file", "P9": "Some vendors have contractual requirements that mean they can't put their actual entity name as it would leak the commercial relationship."}, "consumers": {"C2": {"answers": ["To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "I use uSWID to generate SBOMs from pkgconfig entries.", "C7": "Sometimes the data is not 100% accurate."}, "developers": {"T2": {"answers": ["SPDX", "SWID", "Other (please specify)"], "other": "coSWID"}, "T3": {"answers": ["To meet regulatory requirements"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to create SBOMs for their projects"], "other": ""}, "T5": "Agree", "T6": "uSWID/goSWID/LVFS"}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Tool creators"], "other": ""}, "SM3": "Ideally not ISO, as they requires people to pay to see the specifications..."}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Version number and binary analysis.", "SC9": "using pkgconfig "}, "demographics": {"Q1": "15", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "C / C++"], "other": ""}, "Q5": {"answers": ["Desktop applications", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "libraries for linux", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "12": {"meta": {"StartDate": "2022-11-10 02:17:21", "EndDate": "2022-11-10 04:22:59", "Status": "IP Address", "Progress": "100", "Duration": "7538", "Finished": "True", "RecordedDate": "2022-11-10 04:22:59", "ResponseID": "R_1CqN5FujZLDvcKR", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "A SBOM is a formal set of machine-readable metadata that uniquely identifies a software package and its dependent components. It  should include version and supplier information as well as other relevant information including copyright and licence data. The SBOM should identify all of the components included which your software is dependent on; these components could be 3rd party components e.g. library modules or an application framework. \n\nSBOMs can  support a number of use cases including vulnerability management, licence management and softawre integrity checking.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "Product name\nProduct version\nProduct Supplier\nLicence", "S4": "Neutral", "S5": "Inconsistencies between standards. \n\nThe specifications are trying to capture too much information, most of which isn't readily avaialble. This leads to most of the data fields being optional. \n\nTwo standards\n\nToo many formats supported (SPDX)", "S6": "Define a single standard which defines a minimum set of data", "S7": "Disagree", "S8": "The tools need to meet the needs of the consumers and not the creators. But as consumers don't know what to do with a SBOM this isn't being addressed by the standards/specifciations. Consumers aren't involved in defining the specification/standards as it is been driven by component suppliers.", "S9": {"1": "3", "2": "4", "3": "5", "4": "2", "5": "1", "6": "6", "other": ""}, "S10": "A SBOM forms an integral part of the 'as built' software component and should be delivered with the delivered artefact. \n\nHaving to go back to the supplier for an SBOM isn't always viable as supplier might not be available/contactable... And what commitment would a developer have to produce a SBOM in a timely manner?\n\n3rd party storage has issues in terms of IP management and data protection. \n\nSBOMs need to apply to proprieraty software as well as open-source so access from repositories or website isn't viable in all cases"}, "producers": {"P2": {"answers": ["During project planning", "During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life", "Other (please specify)"], "other": "To monitor project risk"}, "P4": "SBOMs are part of a risk management approach, whether it is identifying potentially vulnerable software, obsolete software or licence violations. An SBOM is just data to support these and other activities.", "P5": "Open-source and self-developped tools", "P7": "Yes", "P8": "Forms part of overall BOM for a released product. Using PLM product", "P9": "SBOMs are fine when automatically created as part of a CI/CD pipeline (although there needs to be multiple tools involved to support the multitude of software ecosystems which are used). Components from some common languages (C/C++) are very difficiult to manage unless in an ecosystem (Conan) which isn't widely adopted.\n\nSBOMs don't readily address legacy components which exist without source - needs lots of manual data entry to create a viable and usavale SBOM"}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "Consumption depends on where the organisation is in the product liefcyle. A product integrator will have very different needs to an end user. A component supplier may consume SBOMs to monitor number of third party components being used whih an user probably doesn't care about.", "C4": {"answers": "Other", "other": "Depends on release cycle"}, "C5": "Yes", "C6": "Open source and self-developed tools which ingest SBOMs. \n\nTooling is to perform vulnerability management of dependent components and centralised storage/querying of components within SBOMs ", "C7": "Consistency (lack of!) in component specification e.g. supplier name, product versions. "}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Disagree", "T6": "SBOM4PYTHON, SBOM4RUST, SBOM-MANAGER, SBOMDIFF\n\nCVE-BIN-TOOL"}, "standard_makers": {"SM2": {"answers": ["SBOM Consumers"], "other": ""}, "SM3": "Via a standards body/independent organisation. \n\nNeeds to be an agile approach and not a talking shop. \n\nApproach adopted by OWASP seems to be appropriate\n"}, "educators": {"E2": "Neutral", "E3": "Neutral", "E4": {"answers": ["SPDX", "CycloneDX", "Generic: can be applied to any format"], "other": ""}, "E5": {"1": "7", "2": "1", "3": "3", "4": "2", "5": "6", "6": "5", "7": "4", "other": "Vendor presentaions"}}, "security": {"SC1": "", "SC2": "Yes", "SC3": "Neutral", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "It can't determine if project is imapcted as it doesn't have enough knoweledge of the deployed context of the product. There is no associated threat model.\n\nThis is outside the scope of SBOM", "SC8": "Manual triage", "SC9": "Python - use pip to identify direct dependences for a component.\n\n\n"}, "demographics": {"Q1": "40", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Desktop applications", "Middleware", "Databases"], "other": ""}, "Q7": "Energy, Finance, Defence", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "14": {"meta": {"StartDate": "2022-11-10 09:21:59", "EndDate": "2022-11-10 09:40:55", "Status": "IP Address", "Progress": "100", "Duration": "1135", "Finished": "True", "RecordedDate": "2022-11-10 09:40:55", "ResponseID": "R_1gnCm7rvxLjS2rN", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "SBOMs are meant to describe the components and known vulnerability status of those components that comprise a software system.  The purpose is to improve transparency of integrated software components for software package purchasers/users.", "S2": {"answers": [""], "other": ""}, "S3": "Creator of SBOM, Data SBOM was created, library dependencies and version numbers,  known vulnerabilities and respective mitigations applied, licensing terms of components, expected/applicable use of software, known PII, performance requirements.", "S4": "Strongly agree", "S5": "Limited SBOM description for Machine Learning (ML) components.", "S6": "Help define a robust set of fields for sufficiently describing ML components.", "S7": "Agree", "S8": "SBOMs need to be built into the existing software development process.  Tooling that integrates into the standard development environments and source code management systems is critical for wide adoption.", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to enhance their projects\u2019 security", "Software stakeholders seeking to remove/replace end-of-life components"], "other": ""}, "T5": "Agree", "T6": "bomsh that supports gitBOM which is a BOM dictionary generator that links with the compile process for C/C++ and Java.  This tool is being used in Cisco Systems along with binary scanners to create SBOMs that meet US Federal government requirements."}, "standard_makers": {"SM2": {"answers": ["SBOM Consumers"], "other": ""}, "SM3": "SBOM standards/specifications should be communicated to tool developers who then integrate with legacy software development environments to produce the standard format automatically. (ideally)"}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications", "Middleware"], "other": ""}, "Q7": "communications", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "No", "Q10": "Never"}}, "15": {"meta": {"StartDate": "2022-11-10 18:18:20", "EndDate": "2022-11-10 19:14:35", "Status": "IP Address", "Progress": "100", "Duration": "3374", "Finished": "True", "RecordedDate": "2022-11-10 19:14:35", "ResponseID": "R_2uq9Acrc4ykecue", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "A Software Bill of Materials or SBOM catalogs information about the dependencies used by a software system or library. These ideally include information about transitive dependencies (the libraries used by other libraries). Common information is the version number of each library, the dependency repository that the library\u2019s package is retrieved from, a cryptographic hash of the library\u2019s package, and a listing of each dependency the library has. Optional information that can also be included is a list of security vulnerabilities that each dependency is vulnerable to.", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "For each dependency\n* Name/path of source manifest file (eg pom.xml, Gemfile, requirements.txt, etc)\n* Package URL, including version and repository (when different that the default for the package ecosystem)\n* Package/Version Release Date\n* The \u201cgroup\u201d that the package is listed in from the manifest (eg dev, test, build, runtime)\n* Know vulnerabilities and an indication of each one\u2019s severity\n", "S4": "Agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "* Improve the quality of information that\u2019s included in the resulting SBOM file, perhaps even standardizing different \u201clevels\u201d of data quality, such as \u201cminimal\u201d, \u201ccommon\u201d, \u201cfull\u201d, with the ability to programmatically evaluate a file\u2019s compliance with that level of data.\n* Include more data about and from the source manifest file when available.\n* Include package release dates\n* Include package release histories (a listing of versions and release dates that were available when the SBOM was created)", "S9": {"1": "4", "2": "3", "3": "5", "4": "6", "5": "2", "6": "1", "other": "Retrievable from package repositories"}, "S10": "My preference would be for each package repository to provide a way to retrieve the SBOM for a given package. The downside of this approach is that it is dependent on adoption of SBOMs by each package/language ecosystem."}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life", "Other (please specify)"], "other": "As a data source for tooling that computes dependency freshness metrics and graphs how they have changed over time (https://github.com/corgibytes/freshli)"}, "C3": "It provides a consistent format for conducting analysis of a project\u2019s dependencies. Before I discovered SBOMs, I was computing much of the same information and craving a consistent format for common pieces of information. I was very excited to discover CycloneDX and the large number of package ecosystems that had tooling to produce the file from that ecosystem\u2019s manifest file formats.", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "* github.com/corgibytes/freshli-cli \n* github.com/corgibytes/freshli-agent-java \n* github.com/corgibytes/dependency-history-maven\n* mvn com.corgibytes:versions-maven-plugin:resolve-ranges-historical via github.com/corgibytes/versions-maven-plugin\n* mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom", "C7": "When using the output from mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom, not being able to differentiate between 3rd party dependencies and those that are included in the repository. For a multi-module Maven pom.xml setup, dependencies from child pom.xml files are nearly indistinguishable from ones that are retrieved from the Maven central repository. "}, "developers": {"T2": {"answers": ["CycloneDX"], "other": ""}, "T3": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain"], "other": ""}, "T5": "Disagree", "T6": "I\u2019ve fixed a bug in cyclonedx-maven-plugin. Does that count?  https://github.com/CycloneDX/cyclonedx-maven-plugin/pull/153"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "GitHub\u2019s dependabot ", "SC9": "I rely on data available from a manifest lock file that shows the full dependency tree or package ecosystem tooling that can generate that list for me."}, "demographics": {"Q1": "22", "Q2": {"answers": "Other (please specify):", "other": "CTO"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Java", "Javascript", "C#", "Others (please specify):"], "other": "Ruby, Kotlin"}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "Banking, finance, e-commerce, healthcare, non-profit, aerospace, general business/back office automation", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "16": {"meta": {"StartDate": "2022-11-08 22:56:32", "EndDate": "2022-11-10 20:36:24", "Status": "IP Address", "Progress": "100", "Duration": "164392", "Finished": "True", "RecordedDate": "2022-11-10 20:36:25", "ResponseID": "R_1OW6El7D3OdhNRf", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "software bill of material, an inventory of dependencies (or any other assets)", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "name\nversion\nvuln\nlicense\nowner\npublish time\nsha\n", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Agree", "S8": ".", "S9": {"1": "1", "2": "2", "3": "4", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["At the developer's discretion, from source code", "During each software build"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "trace the vulnerable dependencies", "P5": "snyk, scantist, owasp", "P7": "Yes", "P8": "cycloneDx", "P9": "SPDX does not have places for vulnerability\ncycloneDX has a free structure, but sometimes too free. Sometimes a single structure can be represented in multiple formats, which is sometimes confusing."}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "analyze if any vuln deps", "C7": "dependency tree relationships are not intuitive"}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Agree", "T6": "."}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "?", "SC9": " just scan. scan the manifest file( pom, builld.gradle) while development and scan after building"}, "demographics": {"Q1": "3", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java"], "other": ""}, "Q5": {"answers": ["Desktop applications"], "other": ""}, "Q7": "software security", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "No", "Q10": "Monthly"}}, "17": {"meta": {"StartDate": "2022-11-12 11:14:31", "EndDate": "2022-11-12 11:58:59", "Status": "IP Address", "Progress": "100", "Duration": "2668", "Finished": "True", "RecordedDate": "2022-11-12 11:59:01", "ResponseID": "R_2X02uH9Mm87FxHp", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs", "Other (please specify)"], "other": "I work on International Standards for a SBOM Trust Registry"}}, "shared": {"S1": "SBOM can serve multiple purposes. SBOM's are used to communicate information about the components contained in a software product which is used by a software consumer to perform a software risk assessment (NTIA minimum elements) or other purposes, such as license management and dependency tracking.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "This highly depends on the purpose in which the SBOM is being applied. For software risk assessments the NTIA recommended minimum elements for Executive Order 14028 and OMB memo M-22-18  are sufficient", "S4": "Strongly disagree", "S5": "SBOM discovery and distribution are missing, but essential functions. An open source Vendor Response File has been recommended for OMB M-22-18 implementation to address discovery and distribution: \nhttps://energycentral.com/c/pip/advice-software-vendors-prepare-omb-m-22-18-requirements\n\nAnother critical piece is a \"TRUST REGISTRY\" of known, trusted software supply chain artifacts, such as SBOM's and signed software packages. A \"TRUST REGISTRY\" is used by software consumers to ascertain the trustworthiness of supply chain artifacts using common criteria and trusted processes. https://datatracker.ietf.org/doc/draft-birkholz-scitt-software-use-cases/ \n", "S6": "Get involved with NIST in the development of standards for SBOM adoption and IETF SCITT for the creation of a trusted web registry.", "S7": "Strongly agree", "S8": "Consider supporting open-source initiatives such as the Vendor Response File used for SBOM discovery and distribution and the IETF SCITT work group; https://datatracker.ietf.org/doc/draft-birkholz-scitt-software-use-cases/ ", "S9": {"1": "5", "2": "6", "3": "2", "4": "4", "5": "3", "6": "1", "other": "Downloadable from access controlled customer portal operated by the SW vendor"}, "S10": "Software Vendors need the ability and freedom to decide how to properly distribute and protect their SBOM's and other supply chain artifacts, i.e. NIST compliant Vulnerability Disclosure Reports: https://energycentral.com/c/pip/what-nist-sbom-vulnerability-disclosure-report-vdr "}, "producers": {"P2": {"answers": ["During each software deployment", "When publishing a major software release", "Other (please specify)"], "other": "When publishing a patch release"}, "P3": {"answers": ["To keep track of dependency vulnerabilities", "Other (please specify)"], "other": "Conduct software risk assessment prior to procurement and installation: https://energycentral.com/c/um/bod-and-c-level-series-software-vulnerability-reporting-and-risk-management "}, "P4": "", "P5": "REA's SAG-PM (created SBOM's from binary software products when no SBOM is provided by a software vendor)\nCycloneDX CLI", "P7": "Yes", "P8": "A database of installed software products is maintained containing product identification information along with a link to an open-source Vendor Response File listing the location of product SBOM's and other supply chain artifacts.", "P9": "Still requires some manual intervention - not entirely automatic to create SBOM's. "}, "consumers": {"C2": {"answers": ["To keep track of dependency vulnerabilities", "Other (please specify)"], "other": "To monitor for new vulnerabilities in installed components"}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "REA distributes a patented (US 11374961) software supply chain risk assessment process called the \"Software Assurance Guardian Point Man\" (TM) SAG-PM (TM) that is used by software consumers to identify risky software before purchase and installation of software. On-going monitoring is also provided by SAG-PM using the programs VDRcheck action.", "C7": "Some software vendors provide SBOM's of product source trees to consumers which is unusable when searching for reported vulnerabilities in the NIST NVD, which identifies components using their \"distributed component name\", not their source file name."}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To keep track of dependency vulnerabilities", "Other (please specify)"], "other": "To monitor for on-going vulnerabilities in installed software components"}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain", "Other (please specify)"], "other": "Software supply chain risk assessments in accordance with  NIST/CISA requirements for OMB memo M-22-18"}, "T5": "Strongly agree", "T6": "\"Software Assurance Guardian Point Man\" (TM) SAG-PM (TM)\nSPDX SBOM standard version 2.3\nOpen Source Vendor Response File for SBOM discovery and distribution; https://energycentral.com/c/pip/advice-software-vendors-prepare-omb-m-22-18-requirements\nITEF SCITT SBOM Use Cases: https://datatracker.ietf.org/doc/draft-birkholz-scitt-software-use-cases/ "}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "As broadly as possible in order to get the most visibility."}, "educators": {"E2": "Strongly agree", "E3": "Agree", "E4": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "E5": {"1": "3", "2": "5", "3": "6", "4": "1", "5": "2", "6": "4", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Strongly agree", "SC5": "Yes", "SC6": "Yes", "SC7": "OWASP Dependency Track", "SC8": "Using a combination of NIST NVD searches and NIST Vulnerability Disclosure Reports available with SAG-PM VDRcheck functions. ", "SC9": "Yes, Python pip freeze listing of components used in a virtual environment used for development"}, "demographics": {"Q1": "40", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications", "Middleware", "Databases"], "other": ""}, "Q7": "Energy (Electric and Natural Gas)", "Q6": "Closed source only", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "18": {"meta": {"StartDate": "2022-11-10 04:02:45", "EndDate": "2022-11-15 03:30:55", "Status": "IP Address", "Progress": "100", "Duration": "430090", "Finished": "True", "RecordedDate": "2022-11-15 03:30:56", "ResponseID": "R_bHpYNSKRMzkT17z", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "An SBOM is a complete list of components and their metadata (licences, copyrights) included in a software, along with all transitive dependencies.\n", "S2": {"answers": ["SPDX", "Other (please specify)"], "other": "Excel-based format"}, "S3": "Mandatory fields in SPDX and NTIA SBOM Minimum elements.\n", "S4": "Agree", "S5": "There is no way to measure the quality/completeness of an SBOM.\n", "S6": "SBOM standards define a method to calculate the quality of an SBOM.\n", "S7": "Disagree", "S8": "Have a similar technology for all kinds of software (for all programming languages and packaging formats and tools).\nCurrent tools do not show the unknowns (e.g. if a file has no license, it is not reported).\n", "S9": {"1": "4", "2": "5", "3": "3", "4": "2", "5": "1", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements"], "other": ""}, "C3": "", "C4": {"answers": "Other", "other": "we use it when we decide to use an open source component"}, "C5": "No", "C6": "", "C7": "In most of the cases, we receive SBOMs in a proprietary format with varying quality.\n"}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects"], "other": ""}, "T5": "Disagree", "T6": "An internal tool for my company.\nSubmitted patches for Tern, Syft and SPDX online tools."}, "standard_makers": {"SM2": {"answers": ["SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "Freely available on the internet.\nSupported by tools.\n"}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Other (please specify):", "other": "OSPO member"}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "C / C++", "Others (please specify):"], "other": "PHP"}, "Q5": {"answers": ["Web applications", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "telecommunication", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Annually"}}, "24": {"meta": {"StartDate": "2022-11-15 20:15:58", "EndDate": "2022-11-15 20:51:59", "Status": "IP Address", "Progress": "100", "Duration": "2161", "Finished": "True", "RecordedDate": "2022-11-15 20:52:00", "ResponseID": "R_2tgjPTTsOMyIVO4", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "It's a kind of Bill of Materials which filled with all the software components in use of the specific software developed, delivered and operated.\nAlso it's giving information of what/where/how/whom etc around each one of piece of software components built the specific software for intended purpose to utilize these information to maintain/perotect the IT systems where running the specific software.", "S2": {"answers": [""], "other": ""}, "S3": "Component name.\nUnique ID (it seems need the solution, due to lack of universal and general unique ID).\nRepository location.\nComponent version.\nCVE (if existing) and advisory.\nLicense type.", "S4": "Neutral", "S5": "Current SBOM guidance in each industry is ambigous.\nAnd it's cost much to manage it, need more investment to the SBOM management which's not matured yet in political/technical, also there is no perfect solution yet for SMB and individual software develiopers.", "S6": "It's very early days, and it seems still prrof of concept stage, because of the still collecting the evidense to brush-up it.\nWe should set right expectations for the software consumer (in other words, operator) at this stage to eliminate any conflicts in the process of software supply chain security implementation into each industry/org.", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Consumers"], "other": ""}, "SM3": "It should be aligned with Cyber Security policy of each Industry/Org whom wants to adopt SBOM to manage the risks behind software components usually unseen from the software consumer/operator.\nAnd if these people doesn't understand the SBOM then it doesn't work anyway."}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Other (please specify):", "other": "researcher"}, "Q3": {"answers": "High School", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": ""}}, "27": {"meta": {"StartDate": "2022-11-16 14:36:13", "EndDate": "2022-11-16 14:47:37", "Status": "IP Address", "Progress": "100", "Duration": "683", "Finished": "True", "RecordedDate": "2022-11-16 14:47:37", "ResponseID": "R_1dvn1oXd2P5Cn5j", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "I create sBOMs for all components/packages and data included in our software product.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "I have been working with spdx-ai work group to get additional fields related to AI applications", "S4": "Agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "AI applications and associate data doesn't work with existing SBOM tools", "S9": {"1": "5", "2": "1", "3": "4", "4": "3", "5": "2", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "", "P5": "Sonatype", "P7": "No", "P8": "", "P9": "All information isn't available, so introduction of NOASSERTION has helped."}, "consumers": {"C2": {"answers": ["To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "Human review of acquired sofware", "C7": "Missing information"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Neutral", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Eclipse", "SC8": "Eclipse and humans", "SC9": "Tidelift"}, "demographics": {"Q1": "30", "Q2": {"answers": "IT Manager", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Operating systems", "Web applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "banking, healthcare, ecommercem, self driving cards", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "38": {"meta": {"StartDate": "2022-12-05 14:40:47", "EndDate": "2022-12-05 16:09:05", "Status": "IP Address", "Progress": "100", "Duration": "5297", "Finished": "True", "RecordedDate": "2022-12-05 16:09:05", "ResponseID": "R_1diviwEB1kpQfiN", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "An SBOM is an inventory of the components a software product/app/system is made of. Mostly third-party components. Their purpose is to inform the software consumer about the origin of these components; and optionally about their license terms; and to track known bugs (including security bugs).", "S2": {"answers": ["SPDX", "CycloneDX", "Other (please specify)"], "other": "https://github.com/kissbom/kissbom-spec"}, "S3": "Minimally, a package-url is necessary and sufficient as it would entirely specify the origin of the included packages.\nSee https://github.com/package-url/purl-spec and  https://github.com/kissbom/kissbom-spec for a minimalist spec.\nand https://github.com/kissbom/kissbom-spec/blob/main/FAQ.rst\nand https://github.com/kissbom/kissbom-spec/issues/1 : does the kissbom-spec meet NTIA standards for Baseline Attributes ?", "S4": "Strongly agree", "S5": "In contrast with the proposed kissbom, other standards are either under-specified or over-engineered or both. They lack simplicity and obviousness. SWID is furthermore a closed standard with a spec hidden behind a paywall.", "S6": "Adopting a minimal format based on purl like the kissbom would go a very long way: this is easy to implement with zero impedance mismatch with the way software developer reason and talk about the third-party packaged components they use.  ", "S7": "Agree", "S8": "I am working actively to help create better FOSS tools, open data and open spec to make SBOM tooling better. purl is emerging as the essential glue to bring together SBOM data across tools and format specs. ", "S9": {"1": "5", "2": "1", "3": "2", "4": "4", "5": "3", "6": "6", "other": "stored with the software product or in a device."}, "S10": "Smaller list of purl could be included everywhere without much concers. "}, "producers": {"P2": {"answers": ["At the developer's discretion, from source code", "During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "Because all open source license require some form of attribution and credits that demand to produce at least origin information, and because an SBOM must contain an accurate list of third-party package origins, a more fleshed-out SBOM can become a license compliance artifact.", "P5": "These open source tools:\nhttps://github.com/package-url/\nhttps://github.com/nexB/scancode-toolkit\nhttps://github.com/nexB/scancode.io/\nhttps://github.com/CycloneDX/\nhttps://github.com/spdx/tools-python\nhttps://enterprise.dejacode.com/", "P7": "Yes", "P8": "For outgoing SBOMs, the version of the product is the version of the SBOM, eventually down to a commit hash.  There is nothing special to support this beyond what we do wrt. versioning of products. These SBOMs are stored in a versioned product in https://enterprise.dejacode.com/ and inherit from the product version.\n\nFor incoming SBOMs, these are attached and imported in a versioned product in https://enterprise.dejacode.com/ and each import is attached to a project in https://github.com/nexB/scancode.io/\n", "P9": "The code required to implement in code support for the mainline SBOM formats such as SPDX or CycloneDX can be rather involved and complicated because parts of the specs are over-engineered and under-specified. This in turn leads to interoperability issues. package-url help with interoperability there and CycloneDX and kissbom shine there, SPDX comes second and SWID is absent."}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "A clean and simple SBOM provides a cross-platform, cross-ecosystem way to track the dependencies of a package. With purl, they expand to support cross-tool interoperability.", "C4": {"answers": "Other", "other": "on each commit and build"}, "C5": "Yes", "C6": "We import these and eventually collect extra data to enrich them. We use ScanCode, purl and DejaCode for this.", "C7": "Several SBOMs fully comply with their specs and/or NTIA guidance but are utterly useless when they do not provide proper accurate package identifiers (e.g., a purl or something that maps both ways to a purl) and when they do not provide SPDX license expression (if they contain license \n\nThe key is: no package origin, no SBOM."}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX", "Other (please specify)"], "other": "purl/kissbom"}, "T3": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain", "Software stakeholders seeking to remove/replace end-of-life components", "Other (please specify)"], "other": "Generally SCA, and embedding in other SCA tools."}, "T5": "Disagree", "T6": "I helped develop these specs and their standard libraries: SPDX, CycloneDX and package-url.\n\nI am the lead maintainer for:\nhttps://github.com/nexB/scancode-toolkit\nhttps://github.com/nexB/scancode.io\nhttps://github.com/package-url/ (all libraries)\nhttps://github.com/nexb/vulnerablecode\nhttps://github.com/nexB/univers\nhttps://enterprise.dejacode.com/\n\nI contributed to these tools directly or when they embed some of the tools above:\nhttps://github.com/spdx/ (python and Go libraries)\nhttps://github.com/cyclonedx/ (python libraries)\nhttps://github.com/oss-review-toolkit\nhttps://github.com/tern-tools\nhttps://github.com/microsoft/sbom-tool\nhttps://github.com/fossology/fossology\nhttps://github.com/fsfe/reuse-tool\nhttps://github.com/fosslight\nhttps://github.com/scanoss\nhttps://github.com/anchore\n "}, "standard_makers": {"SM2": {"answers": ["SBOM Tool creators", "SBOM Consumers"], "other": ""}, "SM3": ""}, "educators": {"E2": "Disagree", "E3": "Disagree", "E4": {"answers": ["SPDX", "CycloneDX", "Generic: can be applied to any format", "Other (please specify):"], "other": "purl and kissbom"}, "E5": {"1": "1", "2": "5", "3": "4", "4": "3", "5": "6", "6": "2", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "VulnerableCode, ScanCode Toolkit and ScanCode.io\n(Note that ORT embeds ScanCode and integrates with VulnerableCode)\nVulnerableCode and DejaCode.com\n\nIn both cases, the ScanCode detects direct and locked dependencies and can resolved non-locked/non-pinned dependencies. The output is a set of purls.\n\nThese purls are used to query VulnerableCode for know vulnerabi;lities (and by vulntotal to compare with other databases)\n", "SC8": "We review their severity and whether the vulnerable code paths are effectively used and look for the next vulnerability free version we can upgrade to.\nWe use the design of https://www.tdcommons.org/dpubs_series/5224/ as implemented in ScanCode.io and Python inspector to resolve non vulnerable dependencies.  ", "SC9": "We created a suite of FOSS tools for this. We uses them.\n- scancode to scan for direct and locked dependencies using manifests and installed package databases (for Docker and VMs) keyed by purl\n- tracecode to resolve and analyze build graphs for fine grained, file-level dependencies\n- various inspectors such as python-inspector or nuget-inspector to perform on-demand live resolution of a dependency graph keyed by purl"}, "demographics": {"Q1": "25", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "C / C++", "Javascript"], "other": ""}, "Q5": {"answers": ["Operating systems", "Web applications", "Mobile applications", "Desktop applications", "Middleware", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "banking back-office, IT asset management, software management. ", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "41": {"meta": {"StartDate": "2022-12-14 11:52:54", "EndDate": "2022-12-14 12:00:47", "Status": "IP Address", "Progress": "100", "Duration": "472", "Finished": "True", "RecordedDate": "2022-12-14 12:00:47", "ResponseID": "R_2s5ZlVioDWKw8nl", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Understand the issues related to software supply chain management", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Neutral", "S5": "There is no shortage", "S6": "Help industry pass SBOM", "S7": "Neutral", "S8": "Pay attention to network security", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Neutral", "E3": "Neutral", "E4": {"answers": ["CycloneDX"], "other": ""}, "E5": {"1": "3", "2": "2", "3": "1", "4": "6", "5": "4", "6": "5", "7": "7", "other": ""}}, "security": {"SC1": "Agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Tester", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": ""}}, "49": {"meta": {"StartDate": "2022-12-14 19:37:20", "EndDate": "2022-12-14 19:55:40", "Status": "IP Address", "Progress": "100", "Duration": "1100", "Finished": "True", "RecordedDate": "2022-12-14 19:55:41", "ResponseID": "R_3HviW61b1bwSd9l", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "The SBOM is a set of metadata that describes the dependency tree of a software package. It includes key information such as the provider, version number, and component name. These basic details play a key role in analyzing software vulnerabilities", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "Hash of the Component. Hash of the component", "S4": "Agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "3", "2": "2", "3": "1", "4": "5", "5": "4", "6": "6", "other": ""}, "S10": "I prefer the project website to download this allocation a little more, I think it is very convenient"}, "producers": {"P2": {"answers": ["During project planning", "At the developer's discretion, from source code", "During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "Improve work efficiency and reduce error rate", "P5": "Salus is a SBOM (Software Bill of Materials) tool that is highly scalable and enterprise ready", "P7": "Yes", "P8": "Based on different industries, SBOM data management can be from the construction and maintenance, command suppression, common module, etc", "P9": "Building blocks keeps getting wrong"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Project Manager", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["C#"], "other": ""}, "Q5": {"answers": ["Desktop applications"], "other": ""}, "Q7": "Medical Internet", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "Annually"}}, "84": {"meta": {"StartDate": "2022-12-15 00:40:03", "EndDate": "2022-12-15 01:21:50", "Status": "IP Address", "Progress": "100", "Duration": "2507", "Finished": "True", "RecordedDate": "2022-12-15 01:21:52", "ResponseID": "R_1OB0LxI7A9lN4v1", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "The SBOM is a set of metadata that describes the dependency tree of a software package. It includes key information such as the provider, version number, and component name. The purpose is to analyze software vulnerabilities", "S2": {"answers": ["SWID"], "other": ""}, "S3": "\u2460 Name of supplier\n\n\u2461 Component name\n\n\u2462 Component version", "S4": "Neutral", "S5": "", "S6": "", "S7": "Neutral", "S8": "Manage open source components by creating a standardized software Bill of Materials (SBOM)", "S9": {"1": "3", "2": "2", "3": "5", "4": "1", "5": "4", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During project planning", "At the developer's discretion, from source code", "During each software build", "During each software deployment"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "", "P5": "Anchore\u3001FOSSA", "P7": "Yes", "P8": "Unify and harmonize internal and external SBoms from multiple sources and in a variety of formats from the entire organization into a single, standardized view by obtaining data from a wide range of sources (internal and/or partners, vendors, and vendors) to identify and document all third party intellectual property (IP). The resulting insights about the use of components or licenses and the exposure of security and vulnerabilities mean that if there is a problem with a license when it is not compliant or when a vulnerability is discovered, the enterprise can take steps to address the problem.", "P9": "Modern web applications tend to have faster release and update cycles, making it impractical to provide SBOM data directly."}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "Can help organizations prioritize the riskiest uses of open source. The first goal is to eliminate libraries with known vulnerabilities and to keep an eye on the latest version of each open source library.", "C4": {"answers": "Once per week", "other": ""}, "C5": "No", "C6": "", "C7": "Vulnerability data is dynamic and constantly changing over time. Software that was not previously considered to be buggy may \"become\" buggy as new bugs are discovered"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "Eclipse SW360", "SC8": "The vulnerability data is tracked in a different data structure from the SBOM. With the development of these two types of data and the maturity of technology, the operational level should focus on the mapping and connection between the two types of data. If vulnerability data is shared across organizations, then both vulnerability data and SBOM can be distributed, accessed, and used using a similar model.", "SC9": "I wanted to solve this problem by creating my own version of the code. I have a Web service that returns the latest version number of my library code, so I can compare it, but onOpen () can't run fetchURL. I tried to open a spreadsheet that will hold the information, but again onOpen () won't let you openById...\nThe onOpen () trigger has security restrictions that prevent me from consulting external data sources I can use to keep my version.\nNote: I don't want to use the script to trigger the OnOpen () event. Script triggers are not copied when the spreadsheet is copied.\nTherefore, I want to start by pointing to external data sources (as urls, other spreadsheets - anything!). To check the library version of the onOpen () trigger event."}, "demographics": {"Q1": "1", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["C / C++", "Javascript"], "other": ""}, "Q5": {"answers": ["Mobile applications", "Databases"], "other": ""}, "Q7": "Healthcare industry", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "89": {"meta": {"StartDate": "2022-12-15 02:02:37", "EndDate": "2022-12-15 02:11:28", "Status": "IP Address", "Progress": "100", "Duration": "531", "Finished": "True", "RecordedDate": "2022-12-15 02:11:28", "ResponseID": "R_1DpptG7RIqiyn7A", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "List of all software components (proprietary and open source code), open source licenses, and dependencies in a given product", "S2": {"answers": ["SWID"], "other": ""}, "S3": "", "S4": "Agree", "S5": "", "S6": "", "S7": "Agree", "S8": "Provide SBOM information to software consumers", "S9": {"1": "2", "2": "4", "3": "1", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "", "C4": {"answers": "Once per month", "other": ""}, "C5": "Yes", "C6": "It is required that all software entering the supply chain should be provided to SBOM enterprises if they need to maintain visibility of the software used", "C7": "Verifiability of the source of SBOM data to confirm that it has not been changed"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "Yes", "SC6": "Yes", "SC7": "LunaSec tool developed by open source data security platform", "SC8": "NPM audit", "SC9": "Configure in Model Class"}, "demographics": {"Q1": "4", "Q2": {"answers": "Project Manager", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Javascript"], "other": ""}, "Q5": {"answers": ["Mobile applications"], "other": ""}, "Q7": "Healthcare", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "Monthly"}}, "119": {"meta": {"StartDate": "2022-12-15 12:23:08", "EndDate": "2022-12-15 13:07:08", "Status": "IP Address", "Progress": "100", "Duration": "2640", "Finished": "True", "RecordedDate": "2022-12-15 13:07:09", "ResponseID": "R_see02VMCNuhmSQN", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "SBOM is a nested list of software. It is a list of components that make up software components.\nSBOM has become a key component of software security and software supply chain risk management. ", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Strongly agree", "S8": "Get a real-time inventory of all software components to see if they can be utilized. Obtain a real-time inventory of the entire environment to identify and manage available risks. Reduce the attack surface. Prioritize the architecture.\n\n ", "S9": {"1": "3", "2": "1", "3": "4", "4": "5", "5": "2", "6": "6", "other": ""}, "S10": "I don't have a preference. It all depends\n\n "}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To learn more about other projects"], "other": ""}, "C3": "Improved visibility in the software supply chain\n\n ", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "Using SCA\n\n ", "C7": "Not yet\n\n "}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "Yes", "SC6": "Yes", "SC7": "Dependency-Track This intelligent component analysis platform allows organizations to identify and mitigate risks in the software supply chain\n\n", "SC8": "One click transforms an isolated security tool into a simplified remediation workflow. Automate, optimize, and extend risk reduction efforts across the organization. Realize value quickly.\n\n", "SC9": "CycloneDx - cyclonex-maven- plugin\n\n "}, "demographics": {"Q1": "8", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["C / C++", "Javascript"], "other": ""}, "Q5": {"answers": ["Operating systems", "Web applications", "Mobile applications", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "Schools and hospitals and communities and a lot of companies that make apps, game developers and so on   ", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "More frequently"}}, "123": {"meta": {"StartDate": "2022-12-15 07:17:58", "EndDate": "2022-12-15 19:58:39", "Status": "IP Address", "Progress": "100", "Duration": "45640", "Finished": "True", "RecordedDate": "2022-12-15 19:58:39", "ResponseID": "R_2dLMPLyI3CfVNMD", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I am involved in defining standards / specifications for SBOMs"], "other": ""}}, "shared": {"S1": "SBOM is a formal, structured record. It not only provides a detailed description of the components of a software product, but also describes the supply chain relationships between these components. SBOM provides an overview of the packages and libraries introduced in the application and the relationship between those packages and libraries and other upstream projects. SBOM is very useful when reusing code and introducing open source code.", "S2": {"answers": [""], "other": ""}, "S3": "Vendor name, component name, component version, dependency, author of SBOM data", "S4": "Agree", "S5": "SBOM are not always easy to create in the supply chain and specifications cannot be agreed upon with suppliers", "S6": "Communicate with suppliers and get more government support, and be more granular in terms of standard rules", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "The government has increased its support for SBOM and used the Internet to promote it"}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": ""}}, "203": {"meta": {"StartDate": "2022-12-27 05:52:03", "EndDate": "2022-12-27 06:20:37", "Status": "IP Address", "Progress": "100", "Duration": "1714", "Finished": "True", "RecordedDate": "2022-12-27 06:20:38", "ResponseID": "R_XMyDUO6vfwhb8CR", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "      A SBOM is a formal, structured record. It not only describes the components of software products in detail, but also describes the supply chain relationship between these components. The SBOM Outlines the packages and libraries introduced into the application and how they relate to other upstream projects. This is useful when reusing code and introducing open source code.\n      An appropriate SBOM helps an organization know the packages it has deployed and the versions of these packages, so that it can update them according to its own needs to maintain security.The use of SBOM is not limited to security. For example, it can also help developers keep track of open source licenses that are included in different types of software components.", "S2": {"answers": ["SWID"], "other": ""}, "S3": "supplier name;component name;version of the component;other unique idetifiers;dependency relationship;author of sbom data;timestamp", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Strongly agree", "S8": "Improve the quality and automation of SBOM process", "S9": {"1": "1", "2": "3", "3": "5", "4": "2", "5": "4", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During project planning", "At the developer's discretion, from source code"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "Allowing organizations to identify and mitigate potential defects in systems or licensed source code earlier, thereby effectively controlling risk. In addition, bills of Materials will help developers better review the finished code embedded in current projects and promote security practices for software development.", "P5": "CleanSource SCA", "P7": "Yes", "P8": "HummerRisk V0.3", "P9": "      The limitations in the SBOM are propagated to the vulnerability scanner.\n       For example, missing software packages in the SBOM may cause false positives (existing vulnerabilities are not reported), and applying patches to a custom software package version may cause false positives. Typically, any package customization that is not reflected in the vulnerability database can cause FP/FN problems. There is no single provider of vulnerability information and no single standard of exchange. Ideally, each vendor would provide its own source of security advice and provide VEX (exploitability) to perfectly identify existing weaknesses."}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "     Without SBOM, you have no visibility. A piece of software is a black box in terms of the packages and libraries that assemble it.\n      We need SBOM for much the same reason we need a food ingredient list. You can check for the presence of allergens, vegan animal substances, chemical preservatives, etc. Sure, you can eat food without checking the ingredients list, but you take some risks. The same applies to software: any reliance on quick testing may be right in a sandbox environment, but you'll want to know what's in it when deploying critical services into production or delivering software in an environment with strict regulatory compliance.\n    The availability of the SBOM for third-party dependencies also makes it easier for you to build the SBOM for software by simply combining the list from the dependencies and adding your own components. Note that your software can also be an input or dependency to more complex products, and consumers may require the presence of SBOM as part of their vendor's minimum requirements.\nIt is also important to know the licenses for different software. Otherwise, distributing software that uses third-party libraries under multiple licenses may violate the terms of use or force you to make the source code public, which could be inconvenient and even cause problems for your company.\n    Finally, the SBOM is a critical part of the vulnerability scanning process. If you have accurate SBOM and reliable and up-to-date vulnerability sources from different vendors and sources, finding which vulnerabilities exist in your software is simple.\n    Without the SBOM, vulnerability scanning software needs to calculate and guess the SBOM, which can be tricky or even impossible for some opaque components.", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Store and manage SBOM in a unified repository", "C7": "Attackers can also tamper with the contents of the SBOM (that is, modify accompanying files or stationary artifacts) to hide the fact that it contains vulnerable or malicious components."}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Chando is the first domestic open source project management software. Its core management idea is based on the agile method scrum, with built-in product management and project management. At the same time, it supplements test management, plan management, release management, document management, transaction management and other functions according to the current situation of domestic research and development. In one software, the requirements, tasks, bugs, use cases, plans, releases and other elements in software development can be tracked and managed in an orderly way, completely covering the core process of project management\n\n", "SC8": "Track application dependencies and get rid of unwanted packages", "SC9": "A database created by an application can be traversed by commands"}, "demographics": {"Q1": "4", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "National city Bank of New York", "Q6": "Open source only", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "Monthly"}}, "218": {"meta": {"StartDate": "2023-01-13 16:32:34", "EndDate": "2023-01-14 07:41:37", "Status": "IP Address", "Progress": "100", "Duration": "54542", "Finished": "True", "RecordedDate": "2023-01-14 07:41:38", "ResponseID": "R_1pXOYrzicaKEh9a", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "SBOM are universal layer and language ti capture data related to the software composition if your product.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "In addition to the current mandatory fields great precision need to be for the field that holds the  software identifiers like cpe/purl/hashes", "S4": "Strongly agree", "S5": "The specifications, and the standards are providing good coverage. The main problem is automated ways to generate SBOM for embedded code like assembly, c, c++", "S6": "By development of open source tools to generate SBOMs with precise and correct data ", "S7": "Disagree", "S8": "More work on the open source tools and solution that can help with automated generation of SBOMs", "S9": {"1": "1", "2": "3", "3": "4", "4": "5", "5": "6", "6": "2", "other": "Authenticate and authorized API"}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "Faster risk analysis and remediation", "P5": "https://github.com/cybeats/sbomgen\nhttps://www.cybeats.com/sbom-studio", "P7": "Yes", "P8": "Jenkins and integration into CI/CD pipelines then SBOM Studio", "P9": "Misalignment with standards specs, incorrect identification of software components, incorrect hierarchy, software component type misclassification"}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Cybeats SBOM Studio\nCybeats SBOM Data Services", "C7": "The variation of tools to create the SBOM and the bugs of this tools"}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain", "Software stakeholders seeking to remove/replace end-of-life components"], "other": ""}, "T5": "Disagree", "T6": "SBOM Studio by Cybeats\nSBOM Data services by Cybeats\nSBOM CI/CD Plugins (Jenkins/CLI)\nSBOM API by Cybeats\nSBOM CSV to CycloneDX Tool\nSBOM Github Action"}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "It's communicated in a good way right now by the government and industry experts involved in forming the standards. However the standards themselves like CycloneDX and SPDX are communicated and documented by the credible open standard organizations who support them OWASP and LF. \n\nCommercial companies are starting to communicate the SBOMs as well as their product support and capabilities with the standards."}, "educators": {"E2": "Agree", "E3": "Disagree", "E4": {"answers": ["SPDX", "CycloneDX", "Generic: can be applied to any format"], "other": ""}, "E5": {"1": "6", "2": "1", "3": "3", "4": "5", "5": "4", "6": "2", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Agree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "CVSS", "SC9": "SBOM Generation Tools https://github.com/cybeats/sbomgen"}, "demographics": {"Q1": "20", "Q2": {"answers": "Other (please specify):", "other": "CTO"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Javascript"], "other": ""}, "Q5": {"answers": ["Others"], "other": "Platforms"}, "Q7": "All", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "More frequently"}}, "221": {"meta": {"StartDate": "2023-02-08 13:58:15", "EndDate": "2023-02-08 14:04:05", "Status": "IP Address", "Progress": "100", "Duration": "350", "Finished": "True", "RecordedDate": "2023-02-08 14:04:06", "ResponseID": "R_9t3tC0i9hMcu7wl", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "an ingredient list of software. They are a file format so that tools can be built on top of them.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "license info\ndependencies\n- package versions\n- package urls\nidentifiers to check against CVEs", "S4": "Agree", "S5": "", "S6": "", "S7": "Strongly disagree", "S8": "A lot more maturity in the industry.", "S9": {"1": "3", "2": "4", "3": "1", "4": "6", "5": "2", "6": "5", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "various programming language plugins like maven spdx.", "P7": "No", "P8": "", "P9": "Generating a correct sbom is surprisingly slow (10s of seconds)"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects"], "other": ""}, "T5": "Strongly disagree", "T6": "github.com/ebay/sbom-scorecard"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "tools like dependabot, snyk, anchore", "SC9": "We don't really do that currently."}, "demographics": {"Q1": "15", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": ["Python", "Java", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "ecommerce, dev platforms", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "225": {"meta": {"StartDate": "2023-02-08 14:02:28", "EndDate": "2023-02-08 14:11:02", "Status": "IP Address", "Progress": "100", "Duration": "514", "Finished": "True", "RecordedDate": "2023-02-08 14:11:03", "ResponseID": "R_2qjW7wCBbBFUunR", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["Other (please specify)"], "other": "I may be evaluating SBOMs already, although without formal training, or even knowing that the dependencies I look at are called SBOMs."}}, "shared": {"S1": "Without looking it up, I would assume that a SBOM is a list of other software that we need to use to get our software working, or to achieve a certain goal. It should probably list at least two pieces of data: the license, and whether that's something that fits into our legal framework, and any licensing costs with the number of users / usage tiers that we need to use.\n\nAdditionally that should extend to their dependencies as well.", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Neutral", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Right now there's no formal / formalized way to do it. Whenever there's an update to any of the dependencies, we use renovate bot to automatically open a PR with the updated dependency. I usually go through the release notes, or if absent, look at the source code difference between the current and the proposed change.", "SC9": "I use golang. It neatly collects everything into a go.mod and go.sum files."}, "demographics": {"Q1": "12", "Q2": {"answers": "Other (please specify):", "other": "Depends on which hat I'm wearing, but software engineer / programmer (for territories where 'engineer' is a protected title), architect, project lead, consultant are all roles I'm happy to take on."}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": ""}}, "228": {"meta": {"StartDate": "2023-02-08 14:29:55", "EndDate": "2023-02-08 14:42:16", "Status": "IP Address", "Progress": "100", "Duration": "740", "Finished": "True", "RecordedDate": "2023-02-08 14:42:16", "ResponseID": "R_11db8BgtVC2jgQK", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Software BOMs describe the components and their dependencies the bring in to an environment. We do them on many levels: frondend (js), backend (java) and containers ...", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "fingerprint, name, version number, ", "S4": "Strongly agree", "S5": "-", "S6": "-", "S7": "Agree", "S8": "talk to the developers!?", "S9": {"1": "3", "2": "1", "3": "4", "4": "5", "5": "2", "6": "6", "other": ""}, "S10": "Not. Recalculateable... especially when you have version ranges of dependencies. then the creation time of the sbom matters"}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "licence and vulnerability checks. navigating a graph of dependencies", "P5": "cyclonedx, syft", "P7": "I don't know", "P8": "", "P9": "versions changed the format and not backward compatible. "}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Agree", "E3": "Agree", "E4": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "E5": {"1": "4", "2": "5", "3": "2", "4": "3", "5": "6", "6": "1", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "dependencytrack makes it visible", "SC8": "on build time, when releases are buildt", "SC9": "maven, npm and packeto"}, "demographics": {"Q1": "18", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "banking", "Q6": "Closed source only", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "229": {"meta": {"StartDate": "2023-02-08 14:38:41", "EndDate": "2023-02-08 14:49:03", "Status": "IP Address", "Progress": "100", "Duration": "621", "Finished": "True", "RecordedDate": "2023-02-08 14:49:04", "ResponseID": "R_2ceH0MWA48ZbGWV", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "SBOM is an \"ingredient list\" of a given solution/software dependencies, versions and associated risks.", "S2": {"answers": ["Other (please specify)"], "other": "Generic markdown files with related informaiton (close to spdx)"}, "S3": "'- software\n- repository\n- version\n- known cves\n- license\n- update frequency / support / community", "S4": "Agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "5", "2": "1", "3": "2", "4": "4", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["When publishing a major software release"], "other": ""}, "P3": {"answers": ["To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "None.", "P7": "No", "P8": "", "P9": "Control the supply chain of the components that are part of the SBOM (dependencies of dependencies).\n"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Neutral", "SC2": "Yes", "SC3": "Neutral", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Dependabot (Github) and manually by cve analysis", "SC9": "Node.js by package.json file\nPython by keeping a requeriments.txt (from virtualenv)\nJava by Maven or Gradle config files"}, "demographics": {"Q1": "10", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++", "Javascript", "C#"], "other": ""}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware", "Databases"], "other": ""}, "Q7": "Construction sector / civil engineering", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "231": {"meta": {"StartDate": "2023-02-08 15:01:08", "EndDate": "2023-02-08 15:17:22", "Status": "IP Address", "Progress": "100", "Duration": "973", "Finished": "True", "RecordedDate": "2023-02-08 15:17:22", "ResponseID": "R_2zcJ4lHWpUWKJ2n", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "A Software Bill of Materials (SBOM) is a list of all the software components used to create a software product. It includes information about the version, origin, and license of each component. SBOMs are especially useful for open source software, as they provide transparency and accountability into the software's components.", "S2": {"answers": [""], "other": ""}, "S3": "In my opinion, an SBOM should include the following data fields: the version, origin, and license of each component, as well as the name and version of the product. Additionally, it should include the type of software (e.g. open source or proprietary) and the language or platform it was written in (e.g. Golang). Finally, it should also include the date and time of the software's creation. This information should provide a comprehensive overview of the software's components and their associated licenses.", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "To address current deficiencies in SBOM tooling, developers should focus on creating tools that are more user-friendly, provide more comprehensive data, and allow for tracking of changes over time. Additionally, developers should look for ways to automate certain processes, such as the creation of reports and the identification of vulnerable components, to make it easier for developers to use the tools. Finally, developers should also consider ways to integrate existing security tools into SBOM tools, as this could help to further improve the security of the software.", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["CycloneDX"], "other": ""}, "T3": {"answers": ["To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Agree", "T6": "vuln-scanner"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "", "SC2": "Yes", "SC3": "Strongly agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "To evaluate the security vulnerabilities of the dependencies I use, I first look up the version of the dependency and check if there are any known security vulnerabilities associated with it. If there are, I will check to see if there are any available patches or updates that can be applied to address the vulnerability. If not, I will look for alternative solutions, such as switching to a different version of the dependency or using a different library altogether. Additionally, I will also use a Software Bill of Materials (SBOM) to help identify any other potential security vulnerabilities in the dependencies I use. This allows me to quickly and easily identify which components are vulnerable and need to be updated or patched.", "SC9": "To obtain the list of libraries that my software uses, I typically use a Software Bill of Materials (SBOM) tool. This tool allows me to quickly and easily identify which components are used in the software, as well as the version, origin, and license of each component. Additionally, the SBOM tool also provides information about the name and version of the product, the type of software, the language or platform it was written in, and the date and time of the software's creation. This allows me to easily identify which components are vulnerable and need to be updated or patched. Additionally, I also use other tools, such as dependency checkers, to help identify any potential security vulnerabilities in the software."}, "demographics": {"Q1": "3", "Q2": {"answers": "Other (please specify):", "other": "Security Analyst"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "C / C++", "Others (please specify):"], "other": "Go"}, "Q5": {"answers": ["Middleware"], "other": ""}, "Q7": "cybersecurity", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "No", "Q10": "Never"}}, "232": {"meta": {"StartDate": "2023-02-08 15:49:49", "EndDate": "2023-02-08 16:07:01", "Status": "IP Address", "Progress": "100", "Duration": "1031", "Finished": "True", "RecordedDate": "2023-02-08 16:07:01", "ResponseID": "R_3LXdpHRFEVQIe4u", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "software bill of materials, they describe the contents of software packages in terms of composition, dependencies and relationship with other software and overall metadata.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "", "S4": "Agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "Help established languages packages follow a common pattern, so that developers downstream would follow along.", "S9": {"1": "3", "2": "2", "3": "4", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To learn more about other projects"], "other": ""}, "C3": "", "C4": {"answers": "Once per month", "other": ""}, "C5": "I don\u2019t know", "C6": "", "C7": "Verifying the information."}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "ad-hoc", "SC9": "ad-hoc"}, "demographics": {"Q1": "20", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Operating systems", "Middleware"], "other": ""}, "Q7": "research, healthcare", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "234": {"meta": {"StartDate": "2023-02-08 19:52:27", "EndDate": "2023-02-08 20:06:28", "Status": "IP Address", "Progress": "100", "Duration": "840", "Finished": "True", "RecordedDate": "2023-02-08 20:06:29", "ResponseID": "R_2yl8CXmByyorHTE", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Define as precisely as possible upstream dependencies for running the code in question. ", "S2": {"answers": ["Other (please specify)"], "other": "package.json"}, "S3": "Package\nSemantic Version ", "S4": "Strongly agree", "S5": "Keeping dependencies up-to-date to ensure security and bug fixes", "S6": "Automation", "S7": "Agree", "S8": "Automated bump", "S9": {"1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During project planning", "At the developer's discretion, from source code", "During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "Depfu\nDependabit\nGithub Actions", "P7": "Yes", "P8": "Weekly check for upgrades \nCI \nAutomation", "P9": "Transitive closure of what exactly I'm pulling down as dependencies. Its scary"}, "consumers": {"C2": {"answers": ["To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "Snyk\nGithub Actions ", "C7": "Unsure of transitive closure"}, "developers": {"T2": {"answers": ["Other (please specify)"], "other": "Package.json"}, "T3": {"answers": ["To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to remove/replace end-of-life components"], "other": ""}, "T5": "Neutral", "T6": "Na"}, "standard_makers": {"SM2": {"answers": ["SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers"], "other": ""}, "SM3": "Don't know "}, "educators": {"E2": "Neutral", "E3": "Agree", "E4": {"answers": ["Other (please specify):"], "other": "Package.json"}, "E5": {"1": "3", "2": "5", "3": "4", "4": "1", "5": "6", "6": "2", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "Snyk\nDependabot\nGithub Actions", "SC8": "Examine vuln reports from scanning tools", "SC9": "npm ls"}, "demographics": {"Q1": "30", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": ["Javascript"], "other": ""}, "Q5": {"answers": ["Web applications", "Middleware", "Databases"], "other": ""}, "Q7": "Web backend", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "235": {"meta": {"StartDate": "2023-02-08 15:12:07", "EndDate": "2023-02-08 20:07:11", "Status": "IP Address", "Progress": "100", "Duration": "17703", "Finished": "True", "RecordedDate": "2023-02-08 20:07:11", "ResponseID": "R_OxHDuxOp8wX3Co1", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "We use them exclusively for licencing validation ", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "Licencing, known CVEs with used versions", "S4": "Strongly disagree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "6", "2": "3", "3": "5", "4": "2", "5": "4", "6": "1", "other": "Business internal platform"}, "S10": "They shouldn't be distributed, the licences involved sure, but the details of what is actually being used is an irrelevant implementation detail."}, "producers": {"P2": {"answers": ["When publishing a major software release", "Other (please specify)"], "other": "When packages are changed in any way"}, "P3": {"answers": ["To meet software licensing requirements", "To keep track of dependency vulnerabilities", "Because my organization asks me to"], "other": ""}, "P4": "Transparent licencing", "P5": "CycloneDX", "P7": "Yes", "P8": "CycloneDX", "P9": "CycloneDX needs a lot of work, currently, it's very rough around the edges.\n\nWe attempted to contribute fixes to their source, but their team makes contributions a hostile experience so now we don't bother."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "CycloneDX, dependabot", "SC8": "Determine if the effected code reaches production, most of the time these 'exploits' are for dev tooling that offer no real attack surface.", "SC9": "Respective package managers for the given language and platform. CycloneDX"}, "demographics": {"Q1": "6", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Javascript"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "Fintech", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "No", "Q10": "More frequently"}}, "236": {"meta": {"StartDate": "2023-02-08 20:58:03", "EndDate": "2023-02-08 21:06:15", "Status": "IP Address", "Progress": "100", "Duration": "491", "Finished": "True", "RecordedDate": "2023-02-08 21:06:15", "ResponseID": "R_3Mapsvs7nPqOx01", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "A list of all the pieces of software and their versions that make a software product. Like raw materials.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "I am happy with current fields", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "3", "2": "1", "3": "2", "4": "4", "5": "5", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "Anchor", "P7": "Yes", "P8": "Using version tag or sha", "P9": "Na"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Dependabot ", "SC8": "Dependabot ", "SC9": "Package.json"}, "demographics": {"Q1": "7", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Javascript"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "Na ", "Q6": "Open source only", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "237": {"meta": {"StartDate": "2023-02-09 00:28:37", "EndDate": "2023-02-09 00:46:09", "Status": "IP Address", "Progress": "100", "Duration": "1051", "Finished": "True", "RecordedDate": "2023-02-09 00:46:09", "ResponseID": "R_1dKyAHvfmPtEwpX", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "They describe the components used for a software system, i.e., the unique identifier of a component, the used version and additional metadata on this component. This may, e.g., include licensing information, vendor information and the like. The SBOM is used to fulfill compliance requirements, like open source compliance and is used throughout the life cycle of the software system to handle events like incoming vulnerability information and their relevance for the system.", "S2": {"answers": [""], "other": ""}, "S3": "Basically all information of a Package URL (PURL) and concerning oss compliance the provided licenses, the copyrights and the identified licenses. ", "S4": "Agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "The question is more about the process used in development using tools and automating also the triggering of manual tasks. The use cases need to be harmonized which is then a requirement for tools ", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements"], "other": ""}, "T5": "Agree", "T6": "OSS Review Toolkit, Eclipse SW360"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "Whitesource", "SC8": "I evaluate on version level an update whenever a fixed version is available", "SC9": "Whitesource"}, "demographics": {"Q1": "25", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": ["Java", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "automotive", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Monthly"}}, "238": {"meta": {"StartDate": "2023-02-09 02:17:26", "EndDate": "2023-02-09 02:30:21", "Status": "IP Address", "Progress": "100", "Duration": "775", "Finished": "True", "RecordedDate": "2023-02-09 02:30:22", "ResponseID": "R_2q9OkXfkfd1mKNK", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "A record of the software components which comprise software application or module. It allows inspection/interrogation of the composition of an application or module in order that you can check for, amongst other things, license risk and vulnerabilities. There are a couple of competing standards for these.", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "Component title, version, license, release date", "S4": "Agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "Better standard tooling for creating SBOMs in each of the different disparate language frameworks. ", "S9": {"1": "3", "2": "1", "3": "4", "4": "5", "5": "2", "6": "6", "other": ""}, "S10": "I think it's important that they are stored alongside the application, whether it's in the repo or attached to the binaries. Storing them with a third party could be useful for more critical or vulnerable applications."}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "When we supply software to third parties, they scan the dependencies themselves to identify license risk and vulnerabilities. By generating and analysing SBOMs in advance, we can get ahead of these requirements and make sure the software we deliver is as free of risk as possible.", "P5": "Various CycloneDX command line tools, run in a CI pipeline", "P7": "No", "P8": "", "P9": "Lack of language/ecosystem support in tooling - I found Cocoapods (iOS) a very difficult ecosystem to produce a scan for. I ended up writing my own tool for these which was tough, as the definitive \"registry\" for Pods is a massive git repo. However this seems to have been addressed in recent versions of the official CycloneDX tooling."}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "By composition, these are necessary for understanding transitive dependencies of the software that we produce.", "C4": {"answers": "Once per month", "other": ""}, "C5": "Yes", "C6": "Using DependencyTrack, through a CI pipeline", "C7": "Differing versions of the standard"}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "T3": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Neutral", "T6": "I've contributed a PR towards DependencyTrack, and once produced a tool for generating CocoaPods CycloneDX SBOMs"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "OWASP DependencyTrack. By creating projects and importing my SBOMs, it shows the vulnerabilities which exist and provides us with the ability to audit our usage of the offending components.", "SC8": "With the development team", "SC9": "CycloneDX"}, "demographics": {"Q1": "13", "Q2": {"answers": "Other (please specify):", "other": "CTO"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications"], "other": ""}, "Q7": "social,healthcare,public sector,utilities", "Q6": "Closed source only", "Q8": "Yes, informal", "Q9": "No", "Q10": "Quarterly"}}, "239": {"meta": {"StartDate": "2023-02-09 06:21:29", "EndDate": "2023-02-09 06:25:42", "Status": "IP Address", "Progress": "100", "Duration": "253", "Finished": "True", "RecordedDate": "2023-02-09 06:25:43", "ResponseID": "R_2Y2DOiMoGMWSQUx", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "Supply chain security", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "Everything relevant", "S4": "Neutral", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "3", "2": "2", "3": "4", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "Github actions - e.g. Anchor or Docker", "P7": "No", "P8": "", "P9": "No good option"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Via various tools and a standard process", "SC9": "Depends on the underlying source, e.g. C/C++ is typically not well supported."}, "demographics": {"Q1": "20", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["C / C++"], "other": ""}, "Q5": {"answers": ["Mobile applications", "Desktop applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "defence, financial, OSS", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "240": {"meta": {"StartDate": "2023-02-09 06:33:50", "EndDate": "2023-02-09 06:48:22", "Status": "IP Address", "Progress": "100", "Duration": "872", "Finished": "True", "RecordedDate": "2023-02-09 06:48:23", "ResponseID": "R_1KiKqNbCINEHxXY", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "it's like an ingredient list for software products", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "product identification, list of packages (with versions), compiler/linker/bundler used, tools used to generate the SBOM", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "too many competing standards for SBOM, lengthy process to generate, size of resulting SBOM", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "syft from Anchore", "P7": "No", "P8": "", "P9": "size of SBOM make them difficult to handle"}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "gives transparency", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "grype by Anchore", "C7": "different standards that are not compatible"}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Disagree", "T6": "kubescape"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "github security scanner", "SC9": "Golang tooling"}, "demographics": {"Q1": "6", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Others (please specify):"], "other": "Go"}, "Q5": {"answers": ["Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "IT industry", "Q6": "Open source only", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "More frequently"}}, "241": {"meta": {"StartDate": "2023-02-09 05:48:46", "EndDate": "2023-02-09 06:51:35", "Status": "IP Address", "Progress": "100", "Duration": "3769", "Finished": "True", "RecordedDate": "2023-02-09 06:51:36", "ResponseID": "R_1Cxae15gxzt2pNE", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "Software Bill Of Materials are basically a list of all software components included in a distributed software projects. All components have some metadata listed like URLs of upstream sources, patches and of course, license informations. The main purpose is to inform whom would like to use the corresponding distributed software in their own products (software or hardware) of what are the license obligations derived by the use of this software.   ", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "For each software component:\n- URL of upstream sources\n- Patches\n- Known CVEs\n- License\n- License concluded (information generated by an auditor through tools like Fossology)", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "There are a lot of useful tools that helps generate SBOM in different development scenarios. In my opinion the key thing is not reinventing the wheel, but leverage and combine what is available and (as for any open source project) contribute upstream the improve available tools. For instance we are currently developing a toolchain that combine different tools (Yocto, Fossology, Scan Code, BANG) to improve the generation of SBOMs for OS for embedded systems (https://projects.eclipse.org/projects/oniro.oniro-compliancetoolchain)", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "Fossology for automatic license scanning and as a support tool for Legal Auditors\nScan Code for support automatic license scanning from Fossology\nREUSE for a first analysis of the presence of license information fro each file\nBANG (Binary Analysis Tool) for binary file analysis and to identify their dependency\nA compliance toolchain internally developed that combine all tools above and a dashboard to summarize all information available in the SBOM (https://sca.software.bz.it/?json=https://gitlab.eclipse.org/eclipse/oniro-compliancetoolchain/mirrors/oniro-goofy/-/jobs/artifacts/kirkstone/raw/report.harvest.json?job=harvest) ", "P7": "Yes", "P8": "In the project Oniro (the one where our compliance toolchain is applied) we defined the following strategy:\n- a SBOM is generated for every new commit that brings new components in the final product: this is only an internal purpose version of the SBOM to help Auditors and Legal staff identified issues well before release time\n- a full SBOM is generated for each intermediate release (alpha, beta, etc.)\n- a final SBOM is generated and released together with the distributed software for the final release", "P9": "Since we are facing a particular case (OS for embedding system based on Yocto system) most of the issues are related to that:\n- due to its intrinsic way of work Yocto use a lot of components to create the final OS. We wanted to get as close as possible to full compliance, so we had to analyse also these components and therefore one of the main issue was the workload. The creation of the toolchain was also meant to mitigate the work of the legal auditors, but it's still a lengthy process.\n- communication with development team is very important and not always easy. The continuous generation of intermediate SBOM helps to identify potential issues and to give advices to the development team but sometimes late commits (for instance close to release date) makes this process difficult."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain"], "other": ""}, "T5": "Agree", "T6": "We contributed to:\n- Fossology\n- BANG\n- REUSE\nWe developed the project Oniro Compliance Toolchain inside the Eclipse Foundation:\n- https://projects.eclipse.org/projects/oniro.oniro-compliancetoolchain"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Project Manager", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Java", "C / C++"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications"], "other": ""}, "Q7": "Remote sensing", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Annually"}}, "244": {"meta": {"StartDate": "2023-02-09 10:33:38", "EndDate": "2023-02-09 12:08:56", "Status": "IP Address", "Progress": "100", "Duration": "5718", "Finished": "True", "RecordedDate": "2023-02-09 12:08:56", "ResponseID": "R_2PAxXAIEnt2gfqt", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "For me, I think of Software Bills-of-Materials as the direct and transitive dependencies necessary to run a piece of software.", "S2": {"answers": ["Other (please specify)"], "other": "package.json, package_lock.json, Gemfile, Gemfile.lock, mix.exs, mix.lock, other package manager formats"}, "S3": "name of package, version, source URL, digest of current version", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "I think the big thing is propagating vulnerabilities in specific packages out to the edges where they're actually used, and getting them updated.", "S9": {"1": "4", "2": "2", "3": "3", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": "If SBOMs aren't automatically shipped as part of a distribution of a package, they'll fall behind and get neglected."}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "", "P5": "npm, gem, bundler, hex package manager", "P7": "No", "P8": "", "P9": "No real issues, although I'm apparently doing it wrong haha"}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "npm audits dependency SBOMs and notifies on things running out of date; github also does this", "C7": "github doesn't support every flavor of language-specific SBOM"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Strongly disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Github dependabot, creates pull requests for version updates when applicable", "SC8": "reading them? i work in vulnerability research so it's part of my skill set", "SC9": "usually by reading the lock file for the specific environment/language in use"}, "demographics": {"Q1": "15", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["C / C++", "Javascript", "Others (please specify):"], "other": "Ruby, Elixir, SQL"}, "Q5": {"answers": ["Web applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "research", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Annually"}}, "247": {"meta": {"StartDate": "2023-02-09 19:15:47", "EndDate": "2023-02-09 19:20:33", "Status": "IP Address", "Progress": "100", "Duration": "285", "Finished": "True", "RecordedDate": "2023-02-09 19:20:33", "ResponseID": "R_2QrYYG4zX8M9X45", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "To have a storage place for studies that can be of easy access and free contribution to the community, aiming to meet new people and/or improve fields and lists for studies", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Agree", "S5": "lack of material on the structure of SBOM", "S6": "Creating sharing and editing structures, a community standard would be very helpful", "S7": "Neutral", "S8": "Creating sharing and editing structures, a community standard would be very helpful", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Neutral", "E3": "Agree", "E4": {"answers": ["Generic: can be applied to any format"], "other": ""}, "E5": {"1": "1", "2": "5", "3": "3", "4": "2", "5": "6", "6": "4", "7": "7", "other": ""}}, "security": {"SC1": "Disagree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": ""}}, "248": {"meta": {"StartDate": "2023-02-10 14:23:41", "EndDate": "2023-02-10 14:45:28", "Status": "IP Address", "Progress": "100", "Duration": "1306", "Finished": "True", "RecordedDate": "2023-02-10 14:45:29", "ResponseID": "R_ZxHSmfKLU5TKoy5", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "Collection of dependencies for developed software.", "S2": {"answers": ["Other (please specify)"], "other": "Poetry"}, "S3": "", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Agree", "S8": "Better version compatibility matching.", "S9": {"1": "3", "2": "1", "3": "4", "4": "2", "5": "5", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To monitor my project's dependencies", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "Poetry, pyproject.toml, poetry.lock", "C7": "Dependency versions were buggy. If s9me versions were flagged once a bug was found, then SBOM could skipped it or down grade "}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "I don't. Only if poetry lets me know.", "SC9": "poetry add {dependency}"}, "demographics": {"Q1": "4", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications"], "other": ""}, "Q7": "Film industry ", "Q6": "Open source only", "Q8": "No", "Q9": "Yes, informal", "Q10": "Monthly"}}, "249": {"meta": {"StartDate": "2023-02-11 07:28:03", "EndDate": "2023-02-11 07:33:14", "Status": "IP Address", "Progress": "100", "Duration": "311", "Finished": "True", "RecordedDate": "2023-02-11 07:33:15", "ResponseID": "R_2Sxhtfy98WZgbDK", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "bill of materials in a piece of software", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "", "S4": "Agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "quicker output, support more types of frameworks / languages", "S9": {"1": "3", "2": "4", "3": "1", "4": "5", "5": "2", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To keep track of dependency vulnerabilities", "Because my organization asks me to"], "other": ""}, "C3": "", "C4": {"answers": "Very rarely", "other": ""}, "C5": "No", "C6": "", "C7": "difficult to parse format, incomplete, contents differ per type of language / framework. Invalid references because of linking with names that are incorrect."}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "Yes", "SC6": "No", "SC7": "OWASP. Gives build errors", "SC8": "Check if we are impacted by the text. ", "SC9": "Gradle outputs dependencies. Yarn / NPM has a lockfile"}, "demographics": {"Q1": "10", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Java", "Others (please specify):"], "other": "Kotlin, TypeScript, Groovy"}, "Q5": {"answers": ["Web applications"], "other": ""}, "Q7": "healthcare", "Q6": "Closed source only", "Q8": "Yes, informal", "Q9": "No", "Q10": "More frequently"}}, "250": {"meta": {"StartDate": "2023-02-11 08:47:10", "EndDate": "2023-02-11 09:14:15", "Status": "IP Address", "Progress": "100", "Duration": "1625", "Finished": "True", "RecordedDate": "2023-02-11 09:14:16", "ResponseID": "R_2AQHobX7zarEkVF", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "Software bill of materials are a complete description of the dependencies of a software component and the component itself including file names, package names, versions, file hashes, and such, presented in formats readable by both humans and machines such as JSON or XML. ", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "", "S4": "Neutral", "S5": "", "S6": "", "S7": "Agree", "S8": "We use SBOM data only to index on software vulnerabilities and the existing tools are sufficient. ", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "", "C4": {"answers": "Once per month", "other": ""}, "C5": "Yes", "C6": "We are a Java shop. Developer teams publish cyclonedx metadata along with components to our internal repository during builds. A security team periodically enumerates this information using a custom Maven resolver, builds a graph of reachable components downstream from new or critical software vulnerabilities, and notifies the impacted teams. ", "C7": "The formats are verbose and contain a lot of repetitive information. However command line tools for executing ad hoc queries over json data can help. It does take a bit of practice. "}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Developer teams utilize the OWASP Maven plugin when making changes to validate they have not introduced a known upstream vulnerability. Security teams analyze the upstream vulnerabilities of all components published to the repository with commercial tools from Sonatype. ", "SC8": "We have relatively simple policies that calculate a required time to fix from the CVSS score.", "SC9": "Maven dependency analysis. "}, "demographics": {"Q1": "32", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++"], "other": ""}, "Q5": {"answers": ["Operating systems", "Web applications", "Middleware", "Databases", "Development tools (compilers, prog. languages, etc.)"], "other": ""}, "Q7": "All domains. Have worked for security vendors and currently a very large SaaS with customers in all verticals. ", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "251": {"meta": {"StartDate": "2023-02-12 06:30:33", "EndDate": "2023-02-12 07:03:18", "Status": "IP Address", "Progress": "100", "Duration": "1964", "Finished": "True", "RecordedDate": "2023-02-12 07:03:18", "ResponseID": "R_wLxhLmNWViOfUVH", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "A formal description of dependencies, and relations in software systems.", "S2": {"answers": ["SPDX", "SWID"], "other": ""}, "S3": "* package or file ifentifier\n* component version (if applicable)\n* dependency scope\n* compinent license\n* source of origin (if not trivially derivable from the management system)\n* integrity information (e.g. hashes)", "S4": "Agree", "S5": "", "S6": "", "S7": "Agree", "S8": "-", "S9": {"1": "3", "2": "1", "3": "2", "4": "5", "5": "4", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["At the developer's discretion, from source code", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "A standardized SBOM helps creating reproducible states of a software project.", "P5": "IDE, build tools/plugins", "P7": "Yes", "P8": "* apply versioning to the SBOM and reference a specific version in the actual projects\n* keep SBOMs along with the project sources under the same version", "P9": "* need to find appropriate tooling that is able to resolve the artifacts from the desired SBOM format\n* keep SBOM versions in sync across teams\n* hard to find a single format that is directly applicable to multi-language/multi-framework projects"}, "consumers": {"C2": {"answers": ["To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "Yes", "C6": "* automatic vulnerability scanning through (transitive) dependencies\n* overriding common dependencies across different artifacts with a compatible version\n* in-/exclude optional third-party dependencies if not required/allowed", "C7": "Different projects keep different constraints on versions (like fixed numbers, semantic versioning, etc.) or use different formats that might not be compatible with the target project."}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "Mainly OWASP Dependency-Tracker.\nShows known vulnerabilities in dependencies across different project verisons, s.t. we can automatically or manually update for the actively supported versions.\nAlso keeps track of vulnerability scores, so we can derive the actual impact for our projects.", "SC8": "Update dependency versions, if they don't break compatibility. This can be helpful for downstream projects, that do not evaluate on vulnerabilities in detail, too.\n\nIf an update requires significant amount of work, evaluate the actual vulnerability and decide whether the project is actually affected, to apply mitigations (if available) or to do a major update or dependency switch.", "SC9": "Mostly through build tools like Apache Maven, Composer or NPM."}, "demographics": {"Q1": "9", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Java"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications", "Middleware"], "other": ""}, "Q7": "automotive, education, healthcare, logistics, public services", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "252": {"meta": {"StartDate": "2023-02-13 23:41:58", "EndDate": "2023-02-13 23:55:36", "Status": "IP Address", "Progress": "100", "Duration": "817", "Finished": "True", "RecordedDate": "2023-02-13 23:55:36", "ResponseID": "R_3DhBfeNEkEfvMqv", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["Other (please specify)"], "other": "I work as OSS Compliance expert and train developers about SBOMs and their uses."}}, "shared": {"S1": "SBOMs should essentially contain list of all third-party/commercial/open source software components used in a product. It should also mention tools used during compile, build, run time - including direct dependencies. Considering today's complex processes of how software components are interrelated to each other in a complex manner, it becomes increasingly difficult to create and maintain a near accurate SBOM.", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Strongly agree", "SC4": "Strongly disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Not applicable. I work as a OSS license compliance analyst. Vulnerabilities  detection/remediation is not part of my job. ", "SC9": "Not applicable. I work as a OSS license compliance analyst. "}, "demographics": {"Q1": "10", "Q2": {"answers": "Other (please specify):", "other": "3 years as software developer, 10+ years as OSS Compliance analyst"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, formal", "Q10": ""}}, "253": {"meta": {"StartDate": "2023-02-14 02:19:17", "EndDate": "2023-02-14 02:42:10", "Status": "IP Address", "Progress": "100", "Duration": "1373", "Finished": "True", "RecordedDate": "2023-02-14 02:42:10", "ResponseID": "R_6hvm6eM6zWh1LpL", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "It\u2019s a list of external dependencies in a software project, there you can find info about license ls and versions ", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Neutral", "S8": "The problem is distribution not tooling", "S9": {"1": "4", "2": "1", "3": "3", "4": "5", "5": "2", "6": "6", "other": ""}, "S10": "Under my perspective Sboms are representations of state , this means they should be generated after each alteration of code or infrastructure"}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": ["To meet software licensing requirements"], "other": ""}, "C3": "More easy and fast that use tools like Ort toolkit", "C4": {"answers": "Very rarely", "other": ""}, "C5": "I don\u2019t know", "C6": "", "C7": "Fear about accuracy "}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Strongly agree", "SC4": "Strongly agree", "SC5": "Yes", "SC6": "I don\u2019t know", "SC7": "Snik", "SC8": "Snik", "SC9": "Jfrog"}, "demographics": {"Q1": "10", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++"], "other": ""}, "Q5": {"answers": ["Web applications", "Desktop applications"], "other": ""}, "Q7": "Retail", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, formal", "Q10": "Never"}}, "254": {"meta": {"StartDate": "2023-02-15 09:31:33", "EndDate": "2023-02-15 09:43:48", "Status": "IP Address", "Progress": "100", "Duration": "735", "Finished": "True", "RecordedDate": "2023-02-15 09:43:48", "ResponseID": "R_3fwNV4JCR7gYKCq", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Ingredients of my software ", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "dependencies\npackages", "S4": "Strongly agree", "S5": "IDK", "S6": "IDK", "S7": "Strongly agree", "S8": "IDK", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": "SBOMs should be located in the repo and must be signed"}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "syft\nko", "P7": "No", "P8": "", "P9": "No issues"}, "consumers": {"C2": {"answers": ["To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "C3": "To verify signed sbom along with deps", "C4": {"answers": "Once per month", "other": ""}, "C5": "Yes", "C6": "Grype\nTrivy", "C7": "No issues, its easy"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Strongly agree", "E3": "Strongly agree", "E4": {"answers": ["SPDX", "CycloneDX", "SWID"], "other": ""}, "E5": {"1": "3", "2": "6", "3": "5", "4": "2", "5": "4", "6": "1", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "Yes", "SC6": "No", "SC7": "Depandebot", "SC8": "By updating latest release", "SC9": "SBOM"}, "demographics": {"Q1": "3", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Others (please specify):"], "other": "Go"}, "Q5": {"answers": ["Web applications", "Desktop applications"], "other": ""}, "Q7": "CLI", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "Never"}}, "271": {"meta": {"StartDate": "2023-02-18 23:39:13", "EndDate": "2023-02-18 23:57:49", "Status": "IP Address", "Progress": "100", "Duration": "1115", "Finished": "True", "RecordedDate": "2023-02-18 23:57:49", "ResponseID": "R_uwgtDqxLmrDWQLf", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I create tools that generate or process SBOMs"], "other": ""}}, "shared": {"S1": "Description of components of a system and how they relate.", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "What\u2019s in CycloneDX makes a lot of sense.", "S4": "Disagree", "S5": "", "S6": "", "S7": "Disagree", "S8": "Reachability graphs. Just because a component is included in a software package does not mean it is ever used by the software and constitutes attack surface. This is especially true for docker images.", "S9": {"1": "3", "2": "2", "3": "4", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": "Should be signed before distribution"}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment"], "other": ""}, "P3": {"answers": ["To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "Syft, retire.js, cyclonedx tools", "P7": "", "P8": "", "P9": "False positives for CVEs, e.g the npm component git get vulnerabilities for the linux command line tool git."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": ["CycloneDX"], "other": ""}, "T3": {"answers": ["To monitor my project's dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "T4": {"answers": ["Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security"], "other": ""}, "T5": "Disagree", "T6": "retire.js, cyclonedx node version"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Neutral", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Github. Pull requests.", "SC8": "Easy to upgrade = upgrade\nElse = analyze bug and reachability before deciding", "SC9": "Github, lock files from package managers"}, "demographics": {"Q1": "20", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware"], "other": ""}, "Q7": "Telecom, utility, banking", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "No", "Q10": "More frequently"}}, "272": {"meta": {"StartDate": "2023-02-19 06:01:26", "EndDate": "2023-02-19 06:28:09", "Status": "IP Address", "Progress": "100", "Duration": "1603", "Finished": "True", "RecordedDate": "2023-02-19 06:28:09", "ResponseID": "R_2QyoYDd5Nw95V9i", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "Documentation for all third party software used in a particular software component/system.", "S2": {"answers": ["Other (please specify)"], "other": "user readable doc/spreadsheet"}, "S3": "Name, version, license, license text if non-standard, reference URL", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "2", "2": "1", "3": "4", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": "I prioritized storing with source as it could (with proper dev discipline) result in a more up to date SBOM."}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "", "P5": "Nothing specific to the purpose.  I've used word/excel as well as specifically formatted files check in alongside third party sources with build pipeline assembling into a SBOM and assuring that all third party components have an entry in the SBOM.", "P7": "No", "P8": "", "P9": "Too many languages involved in products makes it difficult to leverage SBOM tools.  Partial coverage is rarely useful, so I end up having to write ad hoc tools/procedures in order to assure accuracy of SBOM's.\n\nOpensource developers are often as a very low level of maturity leading to poor practices that again make tools to discover third party code unreliable or difficult to use."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Disagree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Risk/Impact analysis.", "SC9": "Third party libraries are identified by being checked into specific third party folder in the source tree.  We currently aren't digging any deeper than that.  "}, "demographics": {"Q1": "40", "Q2": {"answers": "DevOps Engineer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "C / C++", "C#", "Others (please specify):"], "other": "Delphi, Assembly"}, "Q5": {"answers": ["Mobile applications", "Desktop applications", "Middleware"], "other": ""}, "Q7": "Public Utility, Point of Sale, Business Services", "Q6": "Both open source and closed source", "Q8": "Yes, formal", "Q9": "Yes, formal", "Q10": "Quarterly"}}, "276": {"meta": {"StartDate": "2023-02-20 04:19:51", "EndDate": "2023-02-20 04:28:27", "Status": "IP Address", "Progress": "100", "Duration": "515", "Finished": "True", "RecordedDate": "2023-02-20 04:28:27", "ResponseID": "R_1lmiszxqcb8G6Br", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "An ingredient list of all the components present in a given container image along with license information, version information, URL of the codebase.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "Package Name\nVersion\nLicense\nRepo of Source\nContact Details for maintainer(s)\nTransient Dependency Info", "S4": "Neutral", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "other": "Attached to Software binaries (couldn't select properly)"}, "S10": "I think you should be able to easily discover the SBOM in the same location you access the images they relate to. For me this means storing in the relevant registry as metadata connected to the image and verifiable. "}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "Easy to quickly identify if you have a vulnerable library.", "P5": "Syft\nSBOM Socrecard\nChainguard\nCosign\nAWS KMS", "P7": "No", "P8": "", "P9": "We are in the early stages. So far missing pURL info"}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "Reading the CVE information along with the expolitability if the issue in our use case", "SC9": "SCA software - Whitesource / Blackduck.\nSyft - SBOM generation"}, "demographics": {"Q1": "20", "Q2": {"answers": "Other (please specify):", "other": "Engineering Leadership"}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": ["Python", "Others (please specify):"], "other": "Bash, HCL"}, "Q5": {"answers": ["Web applications", "Desktop applications"], "other": ""}, "Q7": "Financial, Healthcare, Manufacturing, Public Sector", "Q6": "Closed source only", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "278": {"meta": {"StartDate": "2023-02-21 12:27:37", "EndDate": "2023-02-21 12:31:10", "Status": "IP Address", "Progress": "100", "Duration": "213", "Finished": "True", "RecordedDate": "2023-02-21 12:31:11", "ResponseID": "R_6JBdPlVxaRCxjah", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["Other (please specify)"], "other": "my company does not give adherence or importance to SBOM"}}, "shared": {"S1": "having a coherent understanding of the software materials and the structure in which they are used for each project ", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "we have a yearly security audit ", "SC9": "we have a quarterly audit "}, "demographics": {"Q1": "4", "Q2": {"answers": "Project Lead", "other": ""}, "Q3": {"answers": "Master's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": ""}}, "279": {"meta": {"StartDate": "2023-02-21 12:49:00", "EndDate": "2023-02-21 13:04:50", "Status": "IP Address", "Progress": "100", "Duration": "950", "Finished": "True", "RecordedDate": "2023-02-21 13:04:51", "ResponseID": "R_2ZNqQzhlTfV14P2", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["Other (please specify)"], "other": "SBOM policy, eg how addressed in EU Cyber Resilience Act"}}, "shared": {"S1": "An ingredients list for software products. Help vendors, buyers, market surveillance authorities better understand software composition in order to avoid and more quickly remediate/coordinate around issues found at component level.", "S2": {"answers": [""], "other": ""}, "S3": "", "S4": "Disagree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": [""], "other": ""}, "P3": {"answers": [""], "other": ""}, "P4": "", "P5": "", "P7": "", "P8": "", "P9": ""}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "Dependabot; AFAIK it's based on declared dependencies and full graph of their dependencies specified in a lockfile or versions constraints absent a lockfile -- and vulnerability databases. However I could easily be missing additional analysis it does.", "SC8": "I just change to a version recommended without the vulnerability. If that were impossible I'd dig deeper to see if the vulnerability affected my application, and if so how it could be mitigated, but I don't recall having to do this. I am however not a FT SWE, I just maintain some projects on the side.", "SC9": "Just the language-specific package manager tooling, plus Dependabot mentioned above."}, "demographics": {"Q1": "10", "Q2": {"answers": "Other (please specify):", "other": "Government Affairs"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": [""], "other": ""}, "Q5": {"answers": [""], "other": ""}, "Q7": "", "Q6": "", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": ""}}, "280": {"meta": {"StartDate": "2023-02-21 13:03:41", "EndDate": "2023-02-21 13:55:50", "Status": "IP Address", "Progress": "100", "Duration": "3129", "Finished": "True", "RecordedDate": "2023-02-21 13:55:51", "ResponseID": "R_eG8r0YjTDRCybL3", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I am involved in defining standards / specifications for SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "Software Bill of Materials is a list of software components the is included in a distributed software package.  It may optionally include information on software components used to document, build or test the distributed software package.  A good software Bill of Material will include all direct and indirect dependencies of the distributed software package as well as supplier and SBOM creation information.", "S2": {"answers": ["SPDX", "CycloneDX", "Other (please specify)"], "other": "Proprietary spreadsheets"}, "S3": "Basically, all the required fields in SPDX - which is a superset of the NTIA minimum.\nSBOM Creation information (Creator name, Creation Date).\nDistributed package information (e.g. supplier, download location, verification information like checksums, external unique identifies such as PURL, GITOID's, or Software Heritage IDs.)\nDependent package information\nRelationships to dependent packages (e.g. statically linked or dynamically linked)\nInformation on source files for any open source packages\nInformation on snippets within files if they are relevant to vulnerability information or licensing information (e.g. bytes 400-600 of file ab.c is copied from a package which uses the GPL-2.0-or-later license)\n", "S4": "Strongly agree", "S5": "'- More than one standard to contend with\n- Complexity of the SBOM standards\n- Difficult authenticate SBOM data", "S6": "'- Encourage interoperability and collaboration between SBOM standards\n- Create \"profiles\" in the standards that target limited scope yet easier to understand model and fields", "S7": "Neutral", "S8": "I'm a big fan of open source collaborative tooling for SBOMs.\n\nBeing a maintainer for a few of these tools, we could benefit from more investments from companies that benefit from the SBOMs - more maintainers, contributors and developers.", "S9": {"1": "4", "2": "1", "3": "2", "4": "5", "5": "6", "6": "3", "other": "Stored as part of a block-chain implementation"}, "S10": "Key to the SBOM distribution is the verification of the SBOM creation information.  Most repositories have mechanisms for verification of the artifacts which can also be used for verifying the SBOM.\n\nOne interesting proposal made about 8 years ago was to use blockchain for a distributed ledger approach on verifying authenticity of SBOM's.  This would allow verification without requiring a trusted third party.\n\nTrusted third parties can be difficult to gain agreement on \"who to trust\"."}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "P4": "If you generate SBOM's for each build, you can identify a variety of issues with your dependencies early in the development lifecycle and improve the quality of the deliverables and improve the efficiency of software development.", "P5": "tools-java (SPDX)\nScancode Toolkit and FOSSOlogy for scanning and initial SBOM creation\nProprietary tools for dependency analysis and report generation\n", "P7": "Yes", "P8": "There is a tool that combine the dependency and source component information and generates an SBOM version.", "P9": "Identifying embedded software which is copied in source when there is no build metadata available\nLicensing information from package managers is not always precise or accurate\nIt may not be possible to identify specific versions of software from the build metadata\n"}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "C3": "Very similar to the production of SBOM - it simplifies, improves the accuracy, and improves the efficiency of dependency management", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "For java, I use the SPDX maven plugin which consumes any available SPDX files when generating the output SPDX files.  The output SPDX file can then be analyzed which will include all the input SPDX files.", "C7": "Inconsistent adherence to the standards."}, "developers": {"T2": {"answers": ["SPDX"], "other": ""}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life"], "other": ""}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain", "Software stakeholders seeking to remove/replace end-of-life components"], "other": ""}, "T5": "Neutral", "T6": "SPDX tools (github.org/spdx):\n- tools-java\n- spdx-java-library and associated project (e.g. spdx-tag-value-store, spdx-rdf-store, ...)\n- spdx-maven-plugin\n- cdx2spdx (CycloneDX to SPDX Converter)\n- spdx-to-osv (produces an OSV vulnerability report from the SPDX documents)\n- spdx-online-tools\n\nI'm also a mentor / maintainer for several of the Google Summer of Code Projects in the SPDX Github repo (e.g. ntia-conformance-checker)\n\nSource Auditor Scanner - proprietary tool that generates SPDX based on software component analysis"}, "standard_makers": {"SM2": {"answers": ["Government bodies", "SBOM Format creators", "SBOM Tool creators", "SBOM Producers", "SBOM Consumers", "Other (please specify)"], "other": "All of the above - we need collaboration from all stakeholders"}, "SM3": "During development of SBOM standards, highly collaborative events such as tools \"bake-offs\", conference discussions, Github collaboration forums.\n\nOnce the SBOM standard is \"solid\", it should go through a formal recognized process such as ISO/IEC."}, "educators": {"E2": "Neutral", "E3": "Neutral", "E4": {"answers": ["SPDX"], "other": ""}, "E5": {"1": "4", "2": "5", "3": "2", "4": "1", "5": "6", "6": "3", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "Yes", "SC6": "Yes", "SC7": "Github - will notify of vulnerabilities as they are known rather than reporting only during a build.  Will propose solutions including an assessment of compatibility - very nice set of tools\ndependency-check Maven plugin - Run before releases.  Will catch some vulnerabilities not identified with the other tools.\nSonar cloud vulnerability assessment - Run during release process. Will catch some vulnerabilities not identified with the other tools.", "SC8": "Using the above mentioned tools.  Once identified, one needs to find out how the dependency is used (and if it is used) which is a manual painful process.", "SC9": "Using the dependency tracking tools mentioned above."}, "demographics": {"Q1": "35", "Q2": {"answers": "Consultant", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python", "Java", "Javascript", "Others (please specify):"], "other": "Flutter"}, "Q5": {"answers": ["Operating systems", "Web applications", "Mobile applications", "Desktop applications", "Middleware", "Databases"], "other": ""}, "Q7": "Computer vendors (HP), enterprise software vendors, software service providers", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "More frequently"}}, "281": {"meta": {"StartDate": "2023-02-21 16:04:18", "EndDate": "2023-02-21 16:44:39", "Status": "IP Address", "Progress": "100", "Duration": "2420", "Finished": "True", "RecordedDate": "2023-02-21 16:44:39", "ResponseID": "R_3MtHobBp4TUfCnf", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies", "I create tools that generate or process SBOMs", "I develop, compile, and/or apply educational resources related to SBOMs"], "other": ""}}, "shared": {"S1": "A software bill of materials is a list of components used in a given piece of software, which could include only components \"shipped\" as part of a package but could also include things like build/test toolchains and linked 3rd party components.  My team typically uses them for security or licensing compatibility checks.", "S2": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "S3": "The current lists are pretty decent, but I'd particularly like more ability to triage information and provide de-duplication of components, particularly when using multiple automated tools.", "S4": "Agree", "S5": "The biggest gaps I see are in the vulnerability exchange and triage portions, which are sometimes not directly part of an SBOM spec.", "S6": "Right now we've got a big gap between theory/policy and practice.  I think a lot of it will shake out as more people use sboms for more than just a ticky box in their government contracts and have to maintain them long-term.  Many policies seem to assume this is something that can be done once per release or on some longer timescale when even small projects see SBOMs changing weekly.", "S7": "Disagree", "S8": "Again: using it in practice.\n\nBig issues:\n- compatibility between tools (Even if the standard used is the same, the data is often incompatibility)\n- Tools for long-term maintenance\n- Tools for standardizing data quality\n", "S9": {"1": "6", "2": "1", "3": "2", "4": "5", "5": "4", "6": "3", "other": "Generated on local system to reflect actual 3rd party libraries used."}, "S10": ""}, "producers": {"P2": {"answers": ["During project planning", "During each software build", "During each software deployment", "When publishing a major software release", "Other (please specify)"], "other": "Multiple of these at once."}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To provide others with information about my project", "To monitor project dependencies", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life", "Other (please specify)"], "other": "Research into SBOMs"}, "P4": "", "P5": "https://pypi.org/project/sbom4python/\nhttps://pypi.org/project/sbomdiff/\nhttps://pypi.org/project/cve-bin-tool/", "P7": "Yes", "P8": ".", "P9": "'- need to create different SBOMs for different versions of python used\n- sboms need to be updated very frequently to stay up to date -- we use scripts to do this\n- unsure as to what a meaningful SBOM would be for an end user, as we don't know what libraries they have already installed\n"}, "consumers": {"C2": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life", "Other (please specify)"], "other": "Research into SBOMs"}, "C3": "", "C4": {"answers": "Every day", "other": ""}, "C5": "Yes", "C6": "We mostly use these for testing our own sbom parsing tools.", "C7": "There were surprisingly few sample SBOMs available for us to use for testing.  I expect this will change over time, but especially as new standard versions emerge testing the code to parse them has lagged as we need to produce examples ourselves."}, "developers": {"T2": {"answers": ["SPDX", "CycloneDX", "SWID", "Other (please specify)"], "other": "our own older fomarts"}, "T3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To learn more about other projects", "To monitor my project's dependencies", "To keep track of dependency vulnerabilities", "Because my organization asks me to", "To make it easier to understand dependencies in complex projects", "To proactively identify replacements for components that reach end-of-life", "Other (please specify)"], "other": "Research and testing"}, "T4": {"answers": ["Businesses and organizations seeking to meet requirements set by regulatory bodies", "Software stakeholders seeking to meet licensing requirements", "Software stakeholders seeking to create SBOMs for their projects", "Software stakeholders seeking to analyze a project's dependencies", "Software stakeholders seeking to enhance their projects\u2019 security", "Businesses and organizations seeking to gain insights into the connections between different pieces of software that they use and/or maintain", "Software stakeholders seeking to remove/replace end-of-life components", "Other (please specify)"], "other": "open source projects who couldnt'/wouldn't use expensive proprietary tools for vulnerability scanning"}, "T5": "Strongly disagree", "T6": "cve-bin-tool"}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "Strongly disagree", "E3": "Strongly disagree", "E4": {"answers": ["SPDX", "CycloneDX"], "other": ""}, "E5": {"1": "3", "2": "6", "3": "2", "4": "1", "5": "5", "6": "4", "7": "7", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Agree", "SC5": "Yes", "SC6": "Yes", "SC7": "Our internal tool information is not shared with the public.", "SC8": "'- consultation with security experts\n- reading through the information provided with the CVE and elsewhere\n", "SC9": "/"}, "demographics": {"Q1": "25", "Q2": {"answers": "Other (please specify):", "other": "Security Researcher"}, "Q3": {"answers": "Doctoral Degree", "other": ""}, "Q4": {"answers": ["Python", "Javascript"], "other": ""}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Databases", "Development tools (compilers, prog. languages, etc.)", "Others"], "other": "Server applications (e.g. email tools)"}, "Q7": "a variety", "Q6": "Open source only", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Annually"}}, "282": {"meta": {"StartDate": "2023-02-21 17:57:54", "EndDate": "2023-02-21 18:29:37", "Status": "IP Address", "Progress": "100", "Duration": "1902", "Finished": "True", "RecordedDate": "2023-02-21 18:29:37", "ResponseID": "R_3DezCyLeytdTqTe", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "I use the SBOMs of software projects I am involved in or third-party software components/dependencies"], "other": ""}}, "shared": {"S1": "In my builds, the SBOMs are a list of the specific software packages, including their versions, that are used when building the package or included as shared libraries when running the software after installation.", "S2": {"answers": ["Other (please specify)"], "other": "Snap package 'manifest.yaml' file"}, "S3": "the Linux package names and version numbers", "S4": "Strongly agree", "S5": "", "S6": "", "S7": "Disagree", "S8": "Figure out how to get consensus among all the build tools so that the creation of an SBOM is automatic, and then have the package repositories (NPM, Maven Central, Snap Store, Flatpak) make it mandatory.", "S9": {"1": "4", "2": "3", "3": "2", "4": "5", "5": "1", "6": "6", "other": ""}, "S10": "I would prefer to have the SBOM included inside the binary package itself, as long as that can be done without breaking reproducible builds. For example, you wouldn't want any timestamps or links to build logs, which is what are unfortunately stored in the Snap packages built by Launchpad currently."}, "producers": {"P2": {"answers": ["During each software build"], "other": ""}, "P3": {"answers": ["To provide others with information about my project", "To keep track of dependency vulnerabilities", "Other (please specify)"], "other": "Because it's automatic for my builds on Launchpad"}, "P4": "The main benefit from creating SBOMs is that Ubuntu notifies me by e-mail when there are any security updates to the dependencies used when building or running the packages.", "P5": "They are created automatically when you build Snap packages on Launchpad and placed in a file inside your software package called 'snap/manifest.yaml'. For example, see:\n\nhttps://launchpad.net/~jgneff/openjdk-snap/+snap/openjdk-candidate\n", "P7": "No", "P8": "", "P9": "I've only seen them in Snap packages. I'm not aware of their widespread use anywhere else. I've heard of something called '.buildinfo' for Maven, but I'm not sure how it's used or whether it's even a common format."}, "consumers": {"C2": {"answers": ["To keep track of dependency vulnerabilities"], "other": ""}, "C3": "", "C4": {"answers": "Once per week", "other": ""}, "C5": "No", "C6": "", "C7": "This issue is just a quirk of the Launchpad build farm and Snap packages, but sometimes I'm notified of a security update to a dependency (either build-time or run-time), yet the dependency is not in the final package. So I have to do extra work each time I'm notified of a dependency to check whether it's really in there.\n"}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Agree", "SC2": "Yes", "SC3": "Agree", "SC4": "Neutral", "SC5": "Yes", "SC6": "Yes", "SC7": "I use the dependency tracking system built into the Launchpad build service for Snap packages.\n", "SC8": "Well, I just update to the latest package with the security fix after checking that the shared library is truly included in the package I distribute.\n", "SC9": "The list of libraries that it uses is included automatically in the package itself in a file located at 'snap/manifest.yaml'."}, "demographics": {"Q1": "39", "Q2": {"answers": "Programmer", "other": ""}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Java"], "other": ""}, "Q5": {"answers": ["Web applications", "Middleware"], "other": ""}, "Q7": "Communications", "Q6": "Open source only", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "284": {"meta": {"StartDate": "2023-02-25 11:35:25", "EndDate": "2023-02-25 12:06:40", "Status": "IP Address", "Progress": "100", "Duration": "1874", "Finished": "True", "RecordedDate": "2023-02-25 12:06:41", "ResponseID": "R_1rPnXt5fSoW2ckE", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in", "Other (please specify)"], "other": "I use SBOMs occassionally, but generally only if I'm going to be distributing the software. Personal projects, not so much."}}, "shared": {"S1": "SBOM's are to support documenting and managing your software supply chain. Important for maintaining security in the current age of supply-chain attacks.", "S2": {"answers": ["SPDX"], "other": ""}, "S3": "I prefer not to list individual files, I would include package information:\n\nSPDXVersion: SPDX-2.2\nDataLicense: CC0-1.0\nDocumentComment: This is an example SPDX document\nPackageName: ExampleApplication\nPackageVersion: 1.0\nPackageLicenseConcluded: Apache-2.0\nPackageDownloadLocation: https://example.com/downloads/ExampleApplication-1.0.tar.gz\nFilesAnalyzed: true\nCreator: Tool:ExampleTool-1.0\nCreatorComment: Created by ExampleTool version 1.0", "S4": "Neutral", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "other": ""}, "S10": "I believe SBOMs should be used to support security and development. I feel mixed on general distribution because they can also outline potential attack-vectors to bad actors."}, "producers": {"P2": {"answers": ["When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet software licensing requirements", "To monitor project dependencies", "To keep track of dependency vulnerabilities"], "other": ""}, "P4": "", "P5": "I generally use ScanCode or online helpers.", "P7": "No", "P8": "", "P9": "As always, time and cost. In small teams with deadlines documentation and testing are early casualties to budget. While preferable, I tend to only use SBOMs for distributed software. We do not use them for internal tools, skunkworks or other R&D prior to maturity."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly disagree", "SC2": "Yes", "SC3": "Agree", "SC4": "Disagree", "SC5": "No", "SC6": "", "SC7": "", "SC8": "We review package security vulnerabilities as a part of our release cycle.", "SC9": "Generally through trusted package management systems or custom package development.\n\nPIP supply change has been recently under attack so we are looking at alternatives, but generally package managers such as PIP, NPM or Composer combined with auditing tools has been reliable.\n\nHowever, we generally assume that supply-chain attacks can come from anywhere at any time and monitor for unintended software behavior, such as outgoing connections to strange destinations."}, "demographics": {"Q1": "23", "Q2": {"answers": "Other (please specify):", "other": "Full Stack Developer at VP level - Mix of business and Dev."}, "Q3": {"answers": "Some college", "other": ""}, "Q4": {"answers": ["Python", "Javascript", "Others (please specify):"], "other": "iOS Swift"}, "Q5": {"answers": ["Web applications", "Mobile applications", "Desktop applications", "Middleware", "Databases"], "other": ""}, "Q7": "Healthcare, Consumer, E-Commerce", "Q6": "Both open source and closed source", "Q8": "Yes, informal", "Q9": "Yes, informal", "Q10": "Quarterly"}}, "294": {"meta": {"StartDate": "2023-03-01 00:25:04", "EndDate": "2023-03-03 04:09:35", "Status": "IP Address", "Progress": "100", "Duration": "186271", "Finished": "True", "RecordedDate": "2023-03-03 04:09:36", "ResponseID": "R_6JS2nMbliGrg85X", "UserLanguage": "EN"}, "self_identification": {"ID1": {"answers": ["I create SBOMs for the software projects I am involved in"], "other": ""}}, "shared": {"S1": "SBOM contains the inventory of all libraries being used in the given repository/service/code.", "S2": {"answers": ["CycloneDX"], "other": ""}, "S3": "NA", "S4": "Agree", "S5": "", "S6": "", "S7": "", "S8": "", "S9": {"1": "1", "2": "2", "3": "4", "4": "5", "5": "3", "6": "6", "other": ""}, "S10": ""}, "producers": {"P2": {"answers": ["During each software build", "During each software deployment", "When publishing a major software release"], "other": ""}, "P3": {"answers": ["To meet regulatory requirements", "To meet software licensing requirements", "To monitor project dependencies", "To make it easier to understand dependencies in complex projects"], "other": ""}, "P4": "", "P5": "CycloneDX library", "P7": "", "P8": "", "P9": "SBOM contain lot of infomraiton including transitive dependencies, sometimes it becomes really confusing to list direct dependencies.\n\nCreating SBOM, I use cycloneDX for creating SBOM, but as this needs package to be included in code base, it becomes really difficult to ask all dev teams to do it and sometimes the build creation fails because of this package."}, "consumers": {"C2": {"answers": [""], "other": ""}, "C3": "", "C4": {"answers": "", "other": ""}, "C5": "", "C6": "", "C7": ""}, "developers": {"T2": {"answers": [""], "other": ""}, "T3": {"answers": [""], "other": ""}, "T4": {"answers": [""], "other": ""}, "T5": "", "T6": ""}, "standard_makers": {"SM2": {"answers": [""], "other": ""}, "SM3": ""}, "educators": {"E2": "", "E3": "", "E4": {"answers": [""], "other": ""}, "E5": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "other": ""}}, "security": {"SC1": "Strongly agree", "SC2": "No", "SC3": "", "SC4": "", "SC5": "", "SC6": "", "SC7": "", "SC8": "", "SC9": ""}, "demographics": {"Q1": "", "Q2": {"answers": "Other (please specify):", "other": "Security Team"}, "Q3": {"answers": "Bachelor's Degree", "other": ""}, "Q4": {"answers": ["Python"], "other": ""}, "Q5": {"answers": ["Web applications", "Others"], "other": "Scripts"}, "Q7": "Security team", "Q6": "Closed source only", "Q8": "Yes, formal", "Q9": "Yes, informal", "Q10": "Never"}}}