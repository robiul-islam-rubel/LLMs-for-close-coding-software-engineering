{
    "SBOM C&A": {
        "S1": {
            "Compliance": "SBOMs are for ensuring compliance with regulations",
            "MachineReadable": "Machines should be able to read or consume SBOM",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "Versioning": "SBOMs should be used in the versioning of software",
            "Debugging": "SBOMs should be used to identify and remove bugs from software",
            "DependencyTracker": "SBOMs should be used to track dependencies in a piece of software.\u00a0 That is that they provide an inventory",
            "Transparency": "SBOMs should provide outsiders with insight into the makeup of a piece of software",
            "Security": "SBOMs should be used to facilitate security related\u00a0activities, including vulnerability management",
            "Provenance": "SBOMs should indicate where a piece of software originated from",
            "Language": "SBOMs are a language",
            "Licensing": "SBOMs should be used to maintain license compliance and / or used to share the software\u00a0license of an end product",
            "Documentation": "SBOMs should be used to describe a software project to stakeholders",
            "Accountability": "SBOMs can be used to hold creators of a piece of software accountable",
            "RelationsInSystem": "SBOMs show how different files in a software system relate and interact",
            "ToolTracking": "SBOM should track tools used in compile, build, and run time"
        },
        "S3": {
            "Ecosystem": "Includes the development community, language, software ecosystem, etc.",
            "URL": "A URL that points to the project or dependency source, providing provenance.\u00a0 This could be the link to a repository",
            "Identifier": "A unique\u00a0identifier given to either the package or dependencies.\u00a0 These should ideally be universal and not different across organizations",
            "Name": "The name of the package or the names of dependencies",
            "BadAnswer": "Response did not answer the question or was incoherent",
            "Modified": "Information on whether dependencies have been modified",
            "Linking": "Whether dependencies are dynamically linked or redistributed",
            "Description": "Refers to a description of the software product and / or version",
            "Version": "Refers to the version number for the produced software, as well as the version number for used dependencies",
            "Author": "The originator(s) of the software product",
            "CreationTime": "Information on when the software/build was created",
            "AIRelated": "Fields related to AI components should be included in the specifications",
            "Dependencies": "A list of dependencies should be included in an SBOM",
            "UseCase": "Refers to the explicit listing of potential / expected use cases for the software",
            "PerformaceRequirements": "The minimum requirements required to run a piece\u00a0of software.\u00a0 Example: the computing resources required to run a machine learning model",
            "Mitigations": "Potential mitigations for known vulnerabilities",
            "License": "Refers to the license of the produced software as well as the licenses of individual components",
            "Vulnerabilities": "List of known vulnerabilities or references to vulnerability database like CVE",
            "Checksum": "A cryptographic hash that provides integrity assurance for the SBOM.\u00a0 Could also be used as a unique\u00a0identifier",
            "Organization": "The organization responsible for creating, distributing, or funding the software product",
            "Compiler": "The compiler, bundler, linker used to create the software product",
            "ToolSupport": "Which tools were used to generate the final SBOM",
            "Support": "The community or support available for a component or piece of software",
            "UpdateFrequency": "How often a component or piece of code is updated",
            "InternalRelationships": "Information related to the internal structure of a project, including how different files are related to each other.\u00a0 Package names are an example",
            "StandardVersion": "The version of the SBOM standard the SBOM is written in",
            "MinimumElements": "SBOM fields should include the minimum elements as specified by governing organizations like the NTIA, SPDX, etc"
        },
        "S5": {
            "MLSupport": "Lack of support for ML components.\u00a0 Missing ML fields",
            "LanguageSupport": "Lack of support for certain programming languages",
            "Tooling": "Lack of good-quality SBOM tools",
            "SbomDistribution": "Issues involved in the distribution\u00a0and sharing of SBOMs",
            "MissingFields": "SBOM standards do not contain certain fields",
            "NoDeficiencies": "There are no deficiencies.\u00a0 All is well",
            "TooManyStandards": "Multitude of standards makes SBOMs difficult to learn and/or to work with",
            "Comprehension": "There are problems understanding SBOMs, including the specifications and their usages",
            "YoungTechnology": "General idea that SBOMs have not yet matured",
            "CheckingSbomQuality": "No reliable way to automatically verify the accuracy or quality of SBOMs",
            "AmbiguousGuidance": "Poor quality guidance on how to use SBOMs",
            "ManagementCost": "Using/Maintaining SBOMs is expensive",
            "DifferenceInExpectations": "Different stakeholders have different expectations for what SBOMs are and how they should be used",
            "Overspecification": "SBOM standards contain too many fields, are bloated, etc.",
            "Inconsistency": "Generated SBOMs are inconsistent.\u00a0 This could either be across tools, formats, or even with time",
            "UseCaseSupport": "There is a lack of support for various use cases.\u00a0 This could be a lack of documentation or lack of tooling",
            "Underspecification": "SBOM standards do not account for all scenarios, miss information, etc.",
            "KeepingUpdated": "Refers to having the ability to keep SBOM fields up to date, such as knowing the vulnerabilities and bug fixes for a dependency",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "DifficultToAuthenticateData": "It is hard to authenticate or verify the data in an SBOM",
            "UnavailableInformation": "Difficult or impossible to obtain certain information which should go into the SBOM"
        },
        "S6": {
            "Standardization": "Standardize the formats",
            "Tooling": "Need for better-quality tools to support SBOMs",
            "AddMLFields": "Incorporate fields into SBOM standards which account for and accurately represent machine learning components",
            "SupportRelatedOrganizations": "Provide funding or other support to organizations which support SBOMs. This can include open source initiatives, government, etc.",
            "Documentation": "Improved documentation, particularly referring to the format specifications",
            "Communication": "Communication between different stakeholders",
            "ImproveOverTime": "Will improve with increased adoption and as practice catches up to theory",
            "BadAnswer": "Answer is not applicable or nonsensical"
        },
        "S8": {
            "BetterLibraries": "Need for high-quality and/or widely used SBOM tool libraries",
            "ReportGenerationTools": "Need for tools which support generating reports from SBOMs",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "HigherSbomQuality": "Generated SBOMs should be of high quality and include all relevant fields. This specifically refers to amount of different types of information stored in an SBOM, rather than the accuracy of included fields.",
            "GenerateAccurateSbom": "Generated SBOMs should accurately reflect the software they represent. This includes all relevant dependencies, transitive dependencies, etc.",
            "NoDeficiencies": "SBOM tools do not demonstrate deficiencies",
            "LanguageSpecificTools": "Tool support for certain programming languages",
            "SupportRelatedOrganizations": "Provide funding or other support to organizations which support SBOMs. This can include open source initiatives, government, etc.",
            "SbomDatabase": "Usage of a freely available and central database to store SBOMs",
            "DynamicSboms": "SBOM generation should be dynamic / automatic and change with the software project.\u00a0 It should be part of the software development cycle",
            "SupportForAIApplications": "Tool support should be added for AI and ML applications",
            "ClarifiedStandards": "The existing standards should be better clarified.",
            "SimplerTools": "Tools should be made easier to use.",
            "LanguageAgnosticTools": "Tools should not be specific to any language.\u00a0 Tools should feature cross language support",
            "Communication": "Communication between different stakeholders",
            "LetFieldMature": "This refers to waiting for the industry to become more mature with respect to SBOMs",
            "ChangeTracking": "Refers to allowing developers to track changes to the SBOM or code base over time",
            "IntegrateSecurityTools": "Refers to integrating currently existing software security tools into sbom generation and consumption tools",
            "UnderstandUseCases": "Refers to the need to understand the end user use cases for SBOM tools",
            "FocusOnExistingTools": "Refers to responses where the developer encourages us to invest more time and effort into existing tools instead of reinventing the wheel",
            "PatchPropagation": "Refers tool the ability to propagate vulnerability information or patches from their source to downstream components.",
            "VersionCompatibilityMatching": "Better tool support for determining the compatibility of different software component versions",
            "FasterGeneration": "Faster generation and output of tools",
            "MoreLanguageSupport": "Add more language and framework support, either agnostic or specific",
            "IncludeReachabilityGraphs": "Tools should produce reachability graphs.\u00a0 Just because a dependency is included in a project, doesn't mean it is used in a way that adds it to the attack surface",
            "CompatibilityBetweenTools": "Improve the compatibility between tools",
            "IntegrateInPackageManagers": "Make SBOM generation automatic and mandatory in package managers",
            "Automation": "Tools should be used to perform certain tasks automatically.",
            "ShowUnknowns": "Tools should readily and clearly display the unknowns of an SBOM (missing license, etc)",
            "SbomsTooLarge": "Generated SBOMs are too large and contain too much information, making them unwieldy"
        },
        "S10": {
            "NoPreference": "Has no preference on how SBOMs are distributed",
            "NotInRepository": "Notes that the SBOMs should not be in the repository with the code",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "DeliveredWithArtifact": "SBOMs should be delivered with the artifact(s) they represent, independent of how those artifacts are distributed",
            "Database": "Usage of a freely available and central database to store SBOMs",
            "InBinary": "Should be include with or as part of the software binary",
            "InRepository": "Should be located in the repository along with source code",
            "VendorDiscretion": "Should be available at the vendor's discretion",
            "OnWebsite": "Available on the project or organization website",
            "NotRecalculable": "Means that the SBOM must be produced by the provider and should not be able to be created by downstream components.",
            "ShouldNotBe": "Respondent thinks that SBOMs should not be distributed at all",
            "ShouldBeSigned": "SBOMs should be cryptographically signed",
            "RegistryOrPackageManager": "SBOMs should be available from a registry or package manager",
            "BlockChain": "Verifiability of SBOM origin could be obtained by using the block chain",
            "DistributionOutlinesAttacks": "Distribution of SBOMs can provide outlines of attack vectors.\u00a0 Security by obscurity",
            "ThirdParty": "SBOMs should be stored with a trusted third party",
            "Automation": "SBOM distribution should be automated to occur with package distribution, rather than having them be manually published"
        },
        "P4": {
            "Efficiency": "SBOMs save time or otherwise increase efficiency",
            "DependencyManagement": "Producing SBOMs helps track a project's dependencies",
            "Visibility": "Producing SBOMs helps other necessary tasks (i.e. dependency management, compliance, etc.) be more visible to project developers and/or consumers",
            "SatisfiedRequirements": "SBOM production is necessary to fulfill certain obligations imposed by regulators or customers",
            "IncreasedAdoption": "SBOM production aided in the associated software being used/adopted",
            "Licensing": "Producing SBOMs assists with license compliance and related tasks",
            "LocateSecurityIssues": "Producing SBOMs helps to identify and localize potential vulnerabilities",
            "BetterCodeReview": "Producing SBOMs assists with the code review process",
            "ReproducibleStates": "SBOM information can help create reproducible project states",
            "ImprovedQuality": "Software product quality is improved by SBOM usage"
        },
        "P8": {
            "Identifier": "Different versions of SBOMs have unique identifiers associated with them",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "TiedToSoftwareVersion": "SBOM versions are directly linked to or associated with a certain version of the software they represent",
            "ToolAssisted": "Uses tools to assist with SBOM versioning",
            "Database": "Versioning is assisted by the use of an artifact database",
            "ContinuousIntegration": "SBOM versioning is implemented through integration with continuous integration systems"
        },
        "P9": {
            "FastReleases": "Creating SBOMs for each version of software is difficult when changes are made quickly or frequently",
            "SpecificationComprehension": "Understanding SBOM standards is difficult",
            "Tooling": "Tool support for producing SBOMs is lacking",
            "InteroperabilityIssues": "Difficult to navigate the intersection of SBOMs and other technologies/standards",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "PoorQualitySBOMs": "Current SBOMs are often low-quality, e.g. missing information",
            "EnvironmentSupport": "Lack of SBOM tool support for different building environments",
            "UnavailableInformation": "Difficult or impossible to obtain certain information which should go into the SBOM",
            "SecurityRisks": "Propagation of risk from low-quality or incorrect SBOM to any tools that would analyze the SBOM",
            "LegalRequirements": "Conflicting obligations make it difficult to put private information into SBOMs that should otherwise be included",
            "ImplementationDifficulty": "Implementing SBOM generation in the software is difficult",
            "Underspecification": "Difficulties arise due to insufficient SBOM standards",
            "SbomGenerationSlow": "Producing SBOMs takes too long",
            "NotBackwardCompatible": "SBOM is not backwards compatible",
            "ContributionIssues": "Refers to those who want to contribute to tools or specifications, but encounter hostility or resistance",
            "SbomsTooLarge": "Generated SBOMs are too large and contain too much information, making them unwieldy",
            "NoIssues": "There are no problems with producing SBOMs",
            "SyncingSbomVersions": "Keeping SBOM versions in sync across an organization",
            "FalsePositives": "Security risks identified that aren't actually risks",
            "TooManyLanguagesInProject": "Sbom standards and tooling don't support projects that involve multiple different languages.\u00a0 Support that exists is incomplete and not helpful",
            "NumberOfSBOMs": "The number of SBOMs that need to be produced, perhaps for different versions of software",
            "EndUserNeedsUnclear": "It's not clear what the needs of the end SBOM user are.\u00a0 It is unclear what the end user would consider meaningful",
            "Cost": "The cost of producing an SBOM in terms of financial, time, or resources",
            "SeparatedFromDevelopers": "Those who generate SBOMs are not the same as those who developed the code, and communication between these groups may be necessary.",
            "Comprehension": "Understanding SBOMs themselves is difficult"
        },
        "C3": {
            "VulnerabilityDetection": "SBOMs highlight potential vulnerabilities",
            "DependencyTracking": "SBOMs aid in tracking a project's dependencies",
            "ProvidesConsistency": "SBOMs aid in anaylzing software due to their standardized format",
            "FastAndEasy": "SBOMs are faster and easier to use than other tools or standards",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "Transparency": "Consuming SBOMs provides transparency into software",
            "Verification": "Consuming SBOMs as a form of verification or authentication of the software, e.g. with signed SBOMs"
        },
        "C7": {
            "ToolBugs": "Bugs exist in the tools",
            "DifferentStandards": "Issues arising from differences in standards and formats",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "DynamicVulnerabilityData": "There is a lack of dynamic, up to date vulnerability data",
            "PoorQualitySboms": "The SBOMs being consumed are of low quality.\u00a0 This could mean that fields are missing, fields are inaccurate, or that false alarms are raised by the SBOM during consumption",
            "UpkeepRequirements": "Difficulty in keeping the SBOM and system up to date",
            "Comprehension": "Comprehension of the SBOM and standards",
            "Verifiability": "Problems verifying the accuracy of consumed SBOMs",
            "MissingToolFeatures": "Tooling is missing desired or required features",
            "Inconsistency": "Inconsistency in tooling, specification, and generated BOM",
            "Verbose": "SBOM content is verbose and repetitive i.e. files are very long",
            "VersioningIssues": "Issues arising from how version information is provided, specified, or constrained",
            "NoIssues": "No issues encountered",
            "HardToGetSBOM": "It is hard to find SBOMs to consume"
        },
        "Sm3": {
            "Website": "Standards should be community via a website.\u00a0 This includes organization pages and GitHub repositories",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "VersionControlIntegration": "SBOMs should be integrated into version control systems",
            "SocialMedia": "Social media, like Slack, should be used to promote SBOM",
            "GoverningBodies": "Governing bodies, including actual governments and non-government organizations, should promote SBOM",
            "Forum": "Details about SBOM specifications should be on forums",
            "Templates": "Usage and example templates should be made available, particularly through sites like GitHub",
            "Hack-a-thon": "Collaborative events for the creation of SBOM tooling",
            "FreelyAvailable": "SBOM standards should be freely available, not behind a paywall",
            "ToolSupport": "SBOM standards should be built into/supported by tools",
            "Conference": "A conference"
        },
        "Sc8": {
            "NotAddressed": "Vulnerabilities in dependencies are not addressed",
            "TestCases": "Test cases are used to detect vulnerabilities",
            "DependencyManagement": "Dependency management tools and techniques are used to find vulnerabilities",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "Versioning": "Versioning, particularly of dependencies, is used to determine if vulnerabilities are present",
            "CodeReview": "Refers to the manual reading of code or the manual searching of data bases like CVE",
            "ListedSeverity": "Dependency vulnerabilities are addressed by considering their ordered severity according to databases like CVE",
            "BinaryAnalysis": "Binary analysis is conducted to find vulnerabilities in dependencies",
            "ToolAssisted": "The process of vulnerability detection is tool assisted",
            "ReadDescription": "Vulnerabilities are evaluated by reading their descriptions in vulnerability databases",
            "InsecureByDefault": "All dependencies are considered insecure by default",
            "SbomAssisted": "Like tool assisted, but specifically uses SBOM in the evaluation of vulnerabilities",
            "Ad-hoc": "No formal strategy is in place",
            "NotApplicable": "Individual or group isn't responsible for security related tasks",
            "SecurityExperts": "Could involve a security audit where a 3rd party inspects a software system or consulting with security experts"
        },
        "Sc9": {
            "ManualRecording": "User effort to track libraries used without tool assistance",
            "ProprietaryTool": "Makes use of a proprietary tool to locate libraries",
            "BadAnswer": "Answer is not applicable or nonsensical",
            "PackageManager": "Utilizes functionality built into their package management system to determine libraries used",
            "SBOM": "Tracks libraries with SBOMs",
            "OwnTool": "Uses a tool of their own creation for obtaining libraries",
            "Scanner": "Uses a scanner to automatically detect libraries",
            "Database": "Creates or maintains a database of libraries used",
            "CallGraph": "Analyzes call graphs to determine libraries used",
            "NotAddressed": "It is not addressed",
            "NotApplicable": "Individual or group isn't responsible for security related tasks",
            "GitHub": "Use GitHub dependency information",
            "SecurityExperts": "Could involve a security audit where a 3rd party inspects a software system or consulting with security experts",
            "Ad-hoc": "No formal strategy is in place"
        },
        "null": {}
    },
    "Critical": {
        "S4 (Q25)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoTechnique": "No specific technique or tools are used to obtain a list of dependencies",
            "PackageManager": "A dependency list is acquired using a package manager like PyPi, npm, Ruby Gems, Maven, Homebrew, etc.",
            "ToolAssisted": "A tool, other than the default package manager for a language, is used to acquire the dependency list.\u00a0 Examples: poetry, composer, etc",
            "README": "Some or all dependency information is manually documented in a README file",
            "PackageFile": "Uses the package.json or requirements.txt of other projects to determine their dependencies",
            "NoDependencies": "The projects have few, if any, dependencies that need to be listed",
            "ManuallyTracked": "Dependencies are manually tracked"
        },
        "S5 (Q81)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoIncentive": "There is no reason for maintainer or project to publish dependencies",
            "NoDependencies": "The project has no dependencies"
        },
        "FS5 (Q12)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "Standardization": "Standardize the formats",
            "Tooling": "Need for better-quality tools to support SBOMs",
            "AddMLFields": "Incorporate fields into SBOM standards which account for and accurately represent machine learning components",
            "SupportRelatedOrganizations": "Provide funding or other support to organizations which support SBOMs. This can include open source initiatives, government, etc.",
            "Documentation": "Improved documentation, particularly referring to the format specifications",
            "Communication": "Communication between different stakeholders",
            "ImproveOverTime": "Will improve with increased adoption and as practice catches up to theory",
            "LeadingOrganizationsForceUse": "Leading organizations should force the use of SBOMs and particular standards",
            "NoResponse": "No answer was given",
            "Requirement": "Make the use of SBOMs a requirement to deploy code to a public repo",
            "Education": "Educate users",
            "AdditionalInformation": "Adding additional information or fields to SBOMs (not including AI / ML fields)",
            "CryptographicVerification": "Use tools and techniques from cryptography to improve / enhance the supply chain",
            "UseExistingTools": "Existing tools should be used and improved instead of developing new ones",
            "BetterMotivation": "A better job needs to be done of motivating SBOM usage"
        },
        "FS7 (Q64)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoResponse": "No answer is given",
            "IncorrectDependencies": "The dependencies list in the generated / consumed SBOM are incorrect",
            "NoIssues": "Participant reports no issues",
            "NotBuiltIntoTools": "An issue is that SBOM generating and consuming functionality is not included in packaging or development tools",
            "StandardsAreTooStrict": "The standards are too specific or strict",
            "SbomsUnavailable": "It is assumed that SBOMs are unavailable\u00a0for most upstream components",
            "UsageUnclear": "It is unclear what SBOMs would be used for even if they were available"
        },
        "FS10 (Q34)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "MavenPlugins": "Maven Plugins are used to determine / verify the accuracy of an sbom",
            "BuildOnEveryCommit": "Project is built on every commit"
        },
        "NU1 (Q17)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoTechnique": "No specific technique or tools are used for dependency management",
            "PackageManager": "Dependencies are managed using a package manager like PyPi, npm, Ruby Gems, Maven, Homebrew, etc.",
            "ToolAssisted": "A tool, other than the default package manager for a language, is used to manage dependencies. Examples: poetry, composer, etc",
            "IssueTrackers": "Issue trackers like Jira and GitHub Issues are used in dependency management",
            "README": "README files are used in the process of dependency management",
            "PackageFile": "Uses the package.json,\u00a0 requirements.txt, cmake, etc of other projects to determine their dependencies",
            "WikiTools": "wiki's are used in the process of dependency management",
            "AdHoc": "ad hoc scripts or techniques are employed in dependency management"
        },
        "NU2 (Q18)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoResponse": "No answer is given",
            "BuiltIn": "The tool or method is built into the IDE, environment, or version control system (GitHub).\u00a0 It could also be considered the default",
            "LessOverhead": "The solution is easy and doesn't have a high setup cost",
            "NoOtherWay": "The method isn't preferred, rather it is the only way to accomplish the task"
        },
        "P5 (Q5)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "PackageManager": "Package managers like pip, npm, and Maven",
            "InternalTools": "Tools internal to the organization"
        },
        "P7 (Q7)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "TiedToSoftwareVersion": "The SBOM version is directly tied to the version of the software project."
        },
        "IP2 (Q83)": {
            "BadAnswer": "Answer is not applicable or nonsensical"
        },
        "C5 (Q6)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoResponse": "No answer is given",
            "MavenPlugins": "Maven plugins are used to analyze and process the sbom",
            "PackageManager": "Use of a package manager (in this case developers are considering quasi-sbom files)"
        },
        "FN3 (Q23)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NotPressing": "The issue of using SBOMs isn't pressing or is unimportant relative to other issues",
            "Time": "The maintainers / developers have limited time resources",
            "CommunityInterest": "Community interest in SBOMs is low",
            "NotWorthEffort": "Using SBOMs is not worth the additional effort",
            "DependedOn": "The project is more likely to be depended on than it is to use dependencies of its own.",
            "NotRequired": "There are no requirements for SBOMs",
            "NoValue": "There is no added value from using SBOM"
        },
        "O2 (Q38)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "DeploymentRequirements": "oboms contain information about deployment requirements",
            "RuntimeRequirements": "OBOMs contain information about runtime requirements",
            "SoftwareVersion": "OBOMs include information about software versions"
        },
        "O4 (Q39)": {
            "BadAnswer": "Answer is not applicable or nonsensical",
            "NoResponse": "No answer is given or is not applicable"
        },
        "null": {}
    },
    "ML": {
        "AI4": {
            "BasicallySbom": "The new suggestion is essentially an SBOM just by a different name"
        },
        "AI7": {
            "IncreasedAdoption": "Increased use and adoption of AIBOM will help make accuracy checking easier",
            "Documentation": "More and improved documentation of AI models and / or there dependencies",
            "Requirements": "Requirements imposed by top paper venues or other sources.\u00a0 These requirements will make AIBOMs more prevalent and more correct",
            "ReproduceModel": "The ability to successfully reproduce the model demonstrates the correctness of the AIBOM",
            "BadAnswer": "The response doesn't answer the asked question.\u00a0 The response is incoherent, rambling, etc.",
            "Certification": "Review boards or another 3rd party assess the correctness of an AIBOM or certify a particular vendor",
            "ChatBot": "The answer likely was derived from a chatbot and should thus be excluded from analysis",
            "Databases": "Compare AIBOM contents with available 3rd party databases.",
            "PinnedVersions": "The specific versions of dependencies used should be included explicitly",
            "IncludedEnvironment": "A docker container should be provided that has the training environment included",
            "ContinuousIntegrationTests": "Tests should be run as part of the continuous integration process",
            "EstablishBestPractices": "Establish a set of agreed upon rules and best practices for the creation of AI models and their accompanying AIBOMs",
            "EmphasisOnDataDependencies": "An emphasis should be placed on data dependencies",
            "CommunityReporting": "Users and developers can report false or incorrect dependencies in an AIBOM",
            "ProvenanceInformation": "Including provenance information will help to determine the correctness of an AIBOM",
            "AutomatedTool": "Response proposes the use of a tool, even if the specific details aren't clear",
            "UniversalAPI": "The establishment of a universal and agreed upon API",
            "ListLibraries": "List libraries used by a project to compare against the SBOM",
            "ModelTrainedViaAIBOM": "The model and the AIBOM are inseparable and if the AIBOM is incorrect, then the model will not run",
            "ModelCode": "AIBOM correctness can be verified by viewing the model's code.",
            "ScreeningPipeline": "Screening processes should be added to the development pipeline.\u00a0 These could be automated tools and tests or actual manual reviews",
            "ZeroKnowledgeProof": "Apply zero knowledge proofs to the problem",
            "CostlessVerification": "Build data integrity with costless verification (related to the block chain)"
        },
        "D5": {
            "Separate": "AIBOMs and DataBOMs can be used together, but should be two separate entities",
            "BadAnswer": "The response doesn't answer the asked question. The response is incoherent, rambling, etc.\n\nThe answer speaks specifically about the relation between data and AI instead of their associated BOMs",
            "Complementary": "AIBOMs and DataBOMs should be used together",
            "ChatBot": "The answer likely was derived from a chatbot and should thus be excluded from analysis",
            "References": "Clear and unambiguous references should be used to link AIBOM to DataBOM and vice\u00a0versa",
            "Integratable": "Integration should be easy (i.e. databom integration with aibom should be easy)",
            "NonSymmetric": "The relationship between AIBOM and DataBOM isn't symmetric.\u00a0 That is that AIBOMs can include references to DataBOM, but DataBOMs shouldn't include references to AIBOMs.",
            "OneToMany": "The AIBOM to DataBOM relationship can be described as a one-to-many.\u00a0 A single AIBOM can reference one or more DataBoms.",
            "Base": "DataBOMs serve as the base / foundation for AIBOM",
            "AiForDownstream": "AIBOMs are generated for downstream components",
            "DataFromUpstream": "DataBOMs are acquired from upstream components",
            "PackagedTogether": "DataBOMs and AIBOMs should somehow be packaged together, since one without the other is useless.",
            "DataBomPartOfAibom": "The information from a databom should be included in an aibom",
            "Unsure": "Answer equivalent to \"I don't know\"",
            "Compatible": "AIBOMs need to be made compatible with databom and vice versa"
        },
        "D7": {
            "BadAnswer": "The response doesn't answer the asked question. The response is incoherent, rambling, etc.",
            "EasierToWorkWith": "The data becomes easier to work with",
            "BetterDocumentation": "Data will be documented better if a specific standard is being used",
            "IncreasedTransparency": "Increased transparency into how the data was acquired, processed, etc.",
            "IdentifyVulnerabilities": "DataBOMs could make identifying bias and vulnerabilities in a model easier",
            "IncreasedModelUnderstanding": "Understanding of model behavior will be increased as a result of databoms",
            "Reproducibility": "Reproducibility is made easier",
            "AssessUsages": "More easily assess tools, products, and studies that rely on the dataset",
            "BetterDataSelection": "Databoms will make determining if a dataset fits a particular use case easier.\n\nThis can also refer to better quality control of data",
            "DataAnalysis": "DataBOMs that include data statistics will make understanding a dataset easier without having to explore it manually.",
            "DataVersioning": "Ability to determine the version of a dataset easily",
            "ExampleModelUsage": "The DataBOM provides an example usage of an SBOM.\n\nNot sure how much sense this answer makes given the question",
            "GuaranteesOnModelPerformance": "Guarantees about the performance of the model\n\nNot sure how much sense this answer actually makes given the question",
            "ProtectIP": "Protect the copyright holder and intellectual property rights",
            "PreventDataAbuse": "Prevent datasets from being abused or used in ways that violate terms of service",
            "IncreasedModelTrust": "Trust in AI models with DataBOMs will be increased",
            "Unsure": "Benefits are unknown or the response was equivalent to \"I don't know\"",
            "ValidationAndTesting": "Model validation and testing becomes easier when using DataBOMs.",
            "BetterLabeling": "DataBOMs help create better classified data.",
            "Compliance": "DataBOMs will assist in managing compliance"
        },
        "D8": {
            "FillingFields": "Information for required fields is missing, difficult to obtain, or may require a domain expert",
            "RigidRequirements": "Rigid, enforced standards and requirements will be an obstacle to DataBOM creation",
            "DatasetCreatorsMakingThem": "Dataset creators will need to be incentivized to create DataBOMs.\u00a0 Similar problem with SBOMs.",
            "IPandPrivacy": "Intellectual property rights and privacy concerns may be obstacles to DataBOM creation",
            "Security": "Bad actors may find new vulnerabilities by looking through DataBOMs.\u00a0 Security by obscurity",
            "LackingStandards": "Standards for DataBOM are lacking, leaving things ambiguous",
            "Versioning": "Issues arise in the versioning of DataBOMs",
            "Updating": "Issues arise in the updating of DataBOMs",
            "VerifyData": "There needs to be a way to inspect, check, and verify the data and data labels in a DataBOM",
            "Distribution": "Distribution of software will be made more complicated by DataBOMs",
            "WorthlessComplianceDocument": "DataBOMs become a compliance document and don't actually solve any problems",
            "TrackingAllTrainingData": "Tracking all of the data used to train a model.\u00a0 Maybe some data is read from memory (files on disk)",
            "Size": "DataBOMs will likely be large files",
            "DataHash": "Hashes should be provided for each data element in the data set, particularly for images",
            "RepresentLabelers": "Providing information in the databom about how information was labeled",
            "Regulation": "Laws like the GDPR may make it difficult to create DataBOMs.",
            "Adoption": "A lack of adoption by the community will be a major challenge",
            "Documentation": "It will be difficult to document sources and methods",
            "Maintenance": "It will be difficult to maintain sources and methods"
        },
        "D9": {
            "Adoption": "The completeness and correctness of DataBOMs will improve as the technology is adopted.",
            "AcademicRequirements": "Make the usage of complete and correct DataBOMs required in academic settings, e.g. required for submission to conferences and journals.",
            "LegalRequirements": "Impose a legal liability for creating DataBOMs which are incorrect or misrepresentative.",
            "TrustedThirdParty": "A trusted community, board, or organization should verify the completeness and correctness of DataBOMs.",
            "ValidationTools": "Tools and tests should be able to verify the completeness and correctness of DataBOMs.",
            "AutomaticValidation": "Validation should occur automatically at some point in the process of creating and storing DataBOMs, such as on submission to a version control system.",
            "CryptographicVerification": "Protect the authenticity of the DataBOM with a cryptographic hash or similar tools.",
            "DataGovernance": "Employ data governance techniques to ensure the completeness and correctness of DataBOMs.",
            "Documentation": "Thorough documentation aids in achieving completeness and correctness.",
            "FormalMethods": "Formalization can help to verify the completeness and correctness of DataBOMs.",
            "Testing": "Rigorous testing can help ensure the completeness and correctness of DataBOMs.",
            "StandardizedProcedures": "Standardized training procedures can monitor data used and prevent inaccuracies from appearing in DataBOMs.",
            "Unsure": "Answer equivalent to \"I don't know\"",
            "ProvenanceInformation": "Including provenance information will help to determine the correctness of a DataBOM.",
            "NotPossibleForPrivateInfo": "Completeness and correctness cannot be assured when the DataBOM handles private information.",
            "TraditionalMethods": "Methods employed for data quality and insurance without DataBOM",
            "Impossible": "Impossible due to the nature of data collection or labelling.\u00a0 Could be that data contains private or sensitive\u00a0information or that the labeling cannot be characterized",
            "MLBasedDataLabeling": "Data described\u00a0by DataBOMs could be labeled with machine learning techniques.",
            "AuditTooling": "Tools that can audit databom",
            "UpgradeTooling": "Tools that can upgrade databom or components",
            "ZeroKnowledgeProof": "Apply zero knowledge proofs to the problem",
            "CostlessVerification": "Build data integrity with costless verification (related to the block chain)"
        },
        "C1": {
            "Reproducability": "AIBOMs make it easier to reproduce\u00a0work.",
            "Security": "AIBOMs make it easier to detect/locate vulnerabilities or mitigate other security risks.",
            "OpenAccess": "AIBOMs make it faster/easier to access resources associated with a system.",
            "BetterDocumentation": "AIBOMs assist with documenting work.",
            "IncreasedTransparency": "Increased transparency into how the data was acquired, processed, etc.",
            "Teaching": "AIBOMs can help people unfamiliar with the project learn more about it.",
            "Unsure": "Answer equivalent to \"I don't know\"",
            "Automation": "AIBOMs help to automate development tasks.",
            "BestPractices": "The use of AIBOMs helps developers to follow best practices.",
            "ExampleModelUsage": "The AIBOM provides an example of usage for the model.",
            "FasterDeployment": "AIBOMs help developers make updates and deployments faster.",
            "DetectBiases": "AIBOMs make it easier to identify potential biases in the model.",
            "ProblemLocation": "AIBOMs highlight issues with models and make them easier to find.",
            "VerifyUsability": "Help to verify usability of the system.\n(Vague answer)",
            "Trust": "AIBOMs increase trust in the model.",
            "ImprovedIteration": "AIBOMs will make the iterative process of improving on previous works much easier",
            "ContinuousIntegration": "AIBOMs will facilitate the continuous integration of ai models",
            "BadAnswer": "Response is not applicable or nonsensical.",
            "BetterCollaboration": "AIBOM could make collaboration easier",
            "Compliance": "AIBOMs will assist in managing compliance"
        },
        "C2": {
            "TimeConsuming": "Creating/using AIBOMs requires a great deal of time.",
            "Documentation": "AIBOMs are another component which requires developers to write documentation.",
            "DomainSpecificKnowledge": "Creating/using AIBOMs may require specialized knowledge in specific areas.",
            "TooStructured": "The highly-structured format of AIBOMs may hinder work.",
            "Adoption": "AIBOMs may go unused, or created with only minimal levels of detail.",
            "WithholdingInformation": "Organizations may be reluctant to release the information which would populate AIBOMs.",
            "Security": "Bad actors may find new vulnerabilities by looking through AIBOMs. Security by obscurity",
            "Unsure": "Answer equivalent to \"I don't know\"",
            "CustomizableTools": "Tools should be able to adapt to different use cases.",
            "Distribution": "Distributing AIBOMs is difficult.",
            "Standardization": "AIBOMs should be better standardized.",
            "NotUseful": "AIBOMs do not solve the problems they purport to.",
            "UseCases": "AIBOMs should be able to adapt to different use cases.",
            "EnsureConfidentiality": "AIBOMs should not release confidential information.",
            "VerifyDependencies": "Difficult to verify the dependencies claimed by an AIBOM.",
            "Size": "AIBOMs are too large.",
            "Versioning": "It is difficult to manage different versions of AIBOMs.",
            "NoChallenges": "Respondent could not identify any challenges.",
            "CrossModel": "AIBOMs should work for various types of models and systems",
            "BadAnswer": "Response is not applicable or nonsensical.",
            "ObsoleteQuickly": "The rapid changes and improvements of AI models will result in AIBOMs becoming quickly obsolete",
            "Maintenance": "It will be difficult to maintain sources and methods"
        },
        "C7": {
            "DeferToLegalSystem": "AIBOMs' handling of licensed material should be based on applicable\u00a0jurisdictions' legal judgements.",
            "UseCaseSpecific": "AIBOMs' handling of licensed material depends on what the dataset will be used for.",
            "AuthorOpinion": "Licensed material should be handled according to wishes/opinions/objections of the author(s).",
            "BOMCreatorLiable": "The creator of the BOM is responsible for ensuring that licensed materials are used correctly, and may be liable if they claim that material is used correctly when that is not the case.",
            "ProvideSourceLicenses": "AIBOMs should provide license information for their data sources.",
            "ProvideSources": "AIBOMs should include information on where data was sourced from.",
            "ProvideTimestamp": "AIBOMs should include information on when data was collected.",
            "OptOut": "Data owners should be able to opt out of data scraping efforts / having their material included in datasets.",
            "Unsure": "Response equivalent to \"I don't know\"",
            "ShouldNotAddress": "AIBOMs should not address licensed material.",
            "UseMaterialsLegally": "AIBOM creators should ensure that they use materials they are approved to use, follow the license requirements for, or are open-source/freely available.",
            "ProvideMethodology": "AIBOMs should describe the methodology of how their data was obtained.",
            "DiscloseLicensedData": "AIBOMs specify that systems were trained on licensed data.",
            "DataOwnersCanCheck": "Data owners should be able to determine if their data/materials was included in a dataset and see exactly which data was used.",
            "ConflictOfInterest": "AIBOMs should disclose any conflicts of interest regarding information used.",
            "DisclosePII": "AIBOMs should disclose whether material includes retrievable/recognizable personally identifiable information.",
            "PartOfImage": "The information should be included as part of the image",
            "AutomatedScreening": "Tool support should be available to automate the screening process and warn developers about potential license infringement",
            "BadAnswer": "Response is not applicable or nonsensical."
        },
        "null": {}
    },
    "CPS": {
        "G1 (Q1)": {
            "UnavailabilityOfComponents": "Physical devices and components may not be available",
            "LackOfStandardization": "Use of different technologies and standards, which change over time, makes development difficult",
            "EthicalConcerns": "Ethical concerns ranging from data privacy, surveillance, etc",
            "RegulatoryCompliance": "Meeting requirements can be challenging, particularly for smaller enterprises",
            "Security": "Software vulnerabilities and potential for cyber-attacks",
            "SafetyRisks": "Safety risks specifically as it pertains to physical hardware",
            "IncreasedComplexity": "Cyber-physical systems have become increasingly complex",
            "Shortages": "The inability to acquire components due to shortages",
            "UnderstandingSoftwareComponents": "The process of fully understanding and analyzing software components, typically\u00a0for the purpose of validation, is difficult and time\u00a0consuming",
            "Reproducability": "Repeating the work of other groups is difficult",
            "DifferentCases": "There are many different types of cyber-physical systems and there is likely not a one size fits all approach",
            "HardwareReliability": "Variations in the quality of physical components can disrupt CPS supply chains."
        },
        "G2 (Q3)": {
            "ValuableResourceForBeginners": "Open source provides an inexpensive, accessible resource for beginners\u00a0in the cyber physical space",
            "UsedInIndustry": "Open source is used in the cyber-physical industry",
            "UsedInAcademia": "Open source is used in cyber-physical academia",
            "EasilyCustomized": "Open source is easily customized",
            "ReducedCost": "Using open source reduces the cost of projects",
            "AvoidLicensingFees": "Using open source limits / removes expensive licensing fees",
            "FasterDevelopment": "Open source facilitates faster development",
            "MoreAccessibleProducts": "Open source makes the final products more accessible and widely available\u00a0to a wide array of users",
            "MoreTrustworthy": "Open source components are more trustworthy than black box solutions",
            "GeneralPurposeFoundation": "Open source provides the general purpose infrastructure required for CPS development",
            "IncreasedInnovation": "Open source encourages increased innovation by allowing more people to contribute to projects",
            "CustomersWantOSS": "Customers generally prefer\u00a0open source software",
            "ProducersUseCSS": "Producers mostly use closed source software or closed ecosystems",
            "HelpsDevelopmentAndTesting": "Open source helps with development and testing activities"
        },
        "O1 (Q35)": {
            "ComponentName": "Name of component",
            "Version": "Version of the component",
            "Vendor": "Vendor, supplier, or producer of component",
            "License": "License of the component",
            "Dependencies": "The dependencies of the component",
            "Functionality": "The intended functionality of the component",
            "Vulnerabilities": "Known vulnerabilities or risks",
            "SourceLocation": "Where the source code for the project can be found",
            "TestingAndQualityAssuranceData": "Data showing that a component meets required standards and specifications",
            "DeploymentInformation": "information about how component is deployed, configured, integrated",
            "UniqueID": "A unique identifier for the component",
            "PartNumbers": "The part numbers or other identifiers associated with hardware components",
            "DateOfManufactor": "When the product was assembled",
            "PlaceOfManufactor": "Where the\u00a0product was assembled",
            "Checksums": "Checksums used for validation and identification",
            "Requirements": "Requirements to run or use the product (system level, hardware, etc)",
            "Limitiations": "Limitations of a product or approach",
            "DevelopmentTools": "Tools that are used in the development process",
            "Price": "The price or cost of a component",
            "Description": "Description of the component",
            "Quantity": "The quantity of the component",
            "AdditionalNotes": "Additional notes about the component",
            "Packaging": "The packaging of a physical component"
        },
        "O2 (Q5)": {
            "VersionControl": "SBOMs facilitate version control in CPS",
            "CompatibilityIssues": "SBOMs can help mitigate compatibility issues in CPS",
            "SecurityRisks": "SBOMs help to detect and address security issues",
            "Compliance": "SBOMs help maintain compliance with regulations, standards, and specifications",
            "DependencyManagement": "SBOMs help in dependency management\u00a0activities",
            "ProvideProvenance": "SBOMs should state where a component originates from and when it was produced",
            "ProvideIntentionData": "SBOMs should provide information about the intended uses of a software",
            "Important": "The role is important or essential"
        },
        "O3 (Q6)": {
            "IncreasedUnderstanding": "SBOMs can make understanding risks easier",
            "BetterMitigation": "SBOMs can facilitate better mitigation of risks",
            "ImprovedVisibility": "SBOMs provide better visibility into a system",
            "ImprovedAccuracy": "SBOMs provide improved accuracy about dependencies",
            "ImprovedIncidentResponse": "SBOMs facilitate faster and better incident responses",
            "MoreAccurateRiskAssessments": "Risk assessments done using SBOM will be more accurate",
            "ImprovedDependencyChecking": "SBOMs will allow automated and better dependency checking, allowing developers to make informed decisions about what to include in their projects",
            "Standardization": "Standardization introduced by SBOM will reduce the risk",
            "BetterMaintainability": "Processes of maintaining, updating, and upgrading will be improved by SBOM",
            "ImprovedLicensing": "SBOM will provide better licensing support",
            "IdentifyVulnerabilities": "SBOMs allow for the easy detection of known vulnerabilities"
        },
        "O5 (Q37)": {
            "NoblePursuit": "Working towards adding SBOM to CPS is a noble pursuit",
            "RequiredDetailedSpec": "A detailed spec if required to make SBOM feasible in CPS domain",
            "VendorsLikelyToIgnore": "Vendors will likely ignore specs for SBOM",
            "AcceptedStandard": "Requires an accepted standard",
            "Excited": "Looking forward or excited to use SBOM in the CPS domain"
        },
        "null": {}
    },
    "Legal": {
        "D2": {
            "DirectDependencies": "An SBOM must list and describe all direct dependencies",
            "TransitiveDependencies": "An SBOM should list and describe transitive dependencies",
            "ExecutedDependencies": "SBOM should only contain information about dependencies that are executed when software is executed",
            "ComponentID": "Information must be provided to unambiguously identify components",
            "DependencyURL": "A dependency url, or provenance, should be included if the dependency is not standard in the package ecosystem",
            "Version": "The SBOM should describe the version of software components and dependencies."
        },
        "D3": {
            "Few": "Not many SBOMs meet minimum requirements"
        },
        "D4": {
            "NtiaMinimum": "The NTIA minimum requirements"
        },
        "L1": {
            "VersionDifferences": "SBOM can help identify specific changes made between versions"
        },
        "L3": {
            "NoLiability": "Because of the licenses that SBOMs are released under, they are issued on an as is basis"
        },
        "L4": {
            "NoOpenSourceLiability": "Because of the licenses that open source SBOM tools are released under, they are issued on an as is basis",
            "LimitedClosedSourceLiability": "Proprietary tools and other commercial\u00a0tools open themselves to as much liability as their warranties introduce",
            "GuaranteesForFee": "Some services may provide guarantees regarding SBOM quality, but these services will likely cost money."
        },
        "L5": {
            "LikelyInRegulatedFields": "Stipulating the provision of SBOMs is likely to be included in licenses and contracts within highly regulated industries in the near future.",
            "UnlikelyInLowRiskFields": "Stipulating the provision of SBOMs is not likely to be included in licenses and contracts within low risk industries in the near future.",
            "BetterToolsRequired": "If tools for producing/consuming/transforming SBOMs become more common and/or more robust, provisions for SBOMs may be more likely to be included in software licenses or contracts."
        },
        "L6": {
            "No": "SBOM creators should not be required to certify that the SBOM is complete and correct.",
            "RequirementCreatesFear": "Requiring that created SBOMs be certified as complete and correct would create fear regarding the creation of SBOMs, hindering their adoption."
        },
        "L7": {
            "ShouldNotContainProprietaryInfo": "The types of information included in SBOMs should not include proprietary information or trade secrets.",
            "NecessaryForSecurity": "The information in SBOMs is necessary for supply chain security, and considering that information a \"trade secret\" defeats the purpose by removing transparency."
        },
        "L8": {
            "AgreementDependent": "Requirements may vary between software vendors,\u00a0 especially depending on their agreements with customers (contracts, etc.).",
            "ShouldNotPreventResponsibleDisclosure": "Software vendors should not attempt to invoke copyright law, etc. to prevent responsible disclosure of software vulnerabilities.",
            "ProcessForResponsibleDisclosure": "Software providers should define processes for responsible disclosure of vulnerabilities which account for things like reasonable timeframes in which to act, etc.",
            "ShouldBeLiableForNegligence": "If a software vendor becomes aware of a vulnerability and does not act to remedy it reasonably soon, they should bear some liability for harms caused by this."
        },
        "AI2": {
            "LicensesNotDesignedForThis": "Open source software licenses generally don't cover the case of including the software in a dataset or using it as training data.",
            "ConditionDependent": "DataBOMs may or may not meet license requirements depending on the specific conditions set forth in a license. Common OSS licenses have various different\u00a0requirements which are triggered when the licensee performs certain action, e.g. distribution, sharing, creating a derivative work, etc.",
            "DatabomStructureDependent": "DataBOMS may or may not meet license\u00a0requirements depending on how they are structured and whether they contain certain pieces of information.",
            "DataDependent": "DataBOMs may or may not meet licensing requirements depending on exactly what data is represented by the document."
        },
        "null": {}
    },
    "Interviews": {
        "Codes": {
            "ProduceSBOM": "The person produces SBOM for some or all of their projects",
            "SbomDistribution": "Discussion about how, where, and why SBOMs are distributed",
            "PurposeOfSbom": "The ultimate purpose of an SBOM is discussed",
            "FormatProblems": "Discussion about problems or shortcomings with current formats",
            "LackOfNeed": "There doesn't seem to be a need or desire from the wider community to support SBOMs",
            "ToolSupport": "Use of tool support for the producing or consuming of SBOMs",
            "ConfusionAboutStandard": "Confusion about or pertaining to a standard was apparent or discussed",
            "SbomCreation": "Discussion about how, when, and why to create SBOMs.",
            "SbomUse": "Discussions pertaining to the usage of SBOM and the reasons why an SBOM may or may not be used",
            "ImportanceOfSbom": "Discussion of the importance of SBOM to the development community",
            "DependencyManagement": "Talked about managing and tracking dependencies",
            "DontKnow": "The participant doesn't know",
            "NeedForBetterTools": "The need for better tool support was discussed",
            "Licensing": "Discussion of how licensing in projects works or issues involved with compliance",
            "BalancingTradeOffs": "Discussing about balancing different trade-offs. For example, over vs underspecification",
            "AwareOfExecOrder": "Respondent aware of executive order",
            "ImpactedByOrder": "ExecOrderImpactedGroup",
            "PackageFilesAreAStart": "Package files (pom, etc) represent a start toward SBOMs",
            "OpenSourceInvolvement": "Developers should work on projects to promote SBOMs and tooling",
            "SbomIsDocumentation": "Sboms are basically documentation",
            "OpenSourceSbomCreation": "Sbom creation should be a community effort",
            "VulnerabililtyDatabase": "Discussion mentioned or was about vulnerability databases",
            "SoftwareIds": "Discussion mentioned or was about software identification",
            "SbomFormats": "Discussion of sbom formats",
            "RelationOfComponents": "Discussed the relationship of components within an SBOM",
            "SbomStandards": "Discussion of the SBOM standards (distinct from formats)",
            "InteroperabilityOfStandards": "Discussed interoperability and relation between standards",
            "BakeOff": "A place for tool developers to come together",
            "TypesOfSbom": "Different types of sbom were discussed",
            "SbomAdoption": "Discussion on the adoption of sboms",
            "BetterCommunication": "Better communication and marketing",
            "SbomFields": "Discussion about which fields should be included in an SBOM",
            "Transparency": "SBOMs should be used to increase\u00a0transparency",
            "AibomWithDatabom": "AIBOMs and DataBOMs are codependent and should be stored together.",
            "IPRisk": "Discusses risks to intellectual property",
            "VulnerabilityMitigation": "Discusses mitigating software vulnerabilities",
            "CloudIsFluid": "Software changes quickly in the cloud, making managing SBOMs more difficult",
            "GovernmentMotivation": "Discusses the impact of the government on SBOM adoption, usage, etc.",
            "MarketMotivation": "Discusses how the markets will affect SBOM adoption, usage, etc.",
            "SbomAccountability": "Discusses what happens when people provide SBOMs which are not accurate or otherwise faulty",
            "SbomQualityIdentification": "Discusses ways to identify low-quality vs. high-quality SBOMs (from a scanning/testing point of view, not in terms of information levels/profiles)",
            "SbomsInContracts": "Discusses the use of SBOMs in contracts",
            "Provenance": "Discusses tracking the provenance of components",
            "NoHbomFormat": "Notes that there isn't an agreed-upon format for HBOMs",
            "HelpWithApproval": "Bills of materials could potentially help expedite approval of medical devices, etc.",
            "SecurityIssues": "Discussion of security issues and security bugs",
            "InabilityToMapMaliciousPackage": "If malicious packages are taken down, then you are not able to map back to them to know if you are effected",
            "VulnerabilitiesDynamic": "Vulnerabilities are dynamic\u00a0and should not be directly stored in the SBOM",
            "FlatDependencyList": "A flat list of dependencies may be sufficient for certain usecases",
            "CryptoAndChecksums": "Discussion about crypto\u00a0and checksums",
            "EmbeddedSBOM": "SBOMs embedded within cyberphysical systems",
            "SaaSbom": "Discussion of SBOMs as they related to the cloud (SaaSBOM)",
            "QualityOfInformation": "The quality and accuracy of dependency information",
            "PoorQualitySbom": "Some SBOMs in the ecosystem are of poor quality",
            "DataLevels": "Discussion of different data levels for SBOM",
            "DifferencesAcrossEcosystems": "There are differences in SBOM tooling across ecosystems",
            "SbomInPackageManager": "SBOMs should be included in package managers",
            "OlderReposShouldGenerateSBOM": "Once the tooling is available and easy, older packages should generate SBOMs",
            "SoftwareFreshnessMetrics": "Discussion about the calculation of freshness metrics",
            "PackageHistoryIncludedInSBOM": "Information about the packages release history should be included in SBOMs",
            "QuasiSBOMs": "The concept of quasisboms is discussed",
            "MakeSbomDefault": "Sboms should be built into systems and made the default",
            "AccuracyOfSbom": "Discussed the accuracy of Sboms",
            "FamiliarWithConcept": "Respondent is familiar with SBOMs",
            "ExplainableModels": "SBOMs might assist with making ML models more explainable",
            "MLReproducibility": "SBOMs make machine learning tasks more reproducible",
            "DifficultToObtainFields": "It is difficult to obtain the information necessary to populate certain SBOM fields",
            "PrivateData": "Discusses concerns regarding private data",
            "TransitiveDependencies": "Highlights the difficulty of finding/managing transitive dependencies",
            "DataOverModel": "Sometimes you care more about the data used to train an ML model than you do about the model itself",
            "BurdenToCreateBOM": "Creating BOMs is difficult or onerous",
            "ExtraneousInformation": "BOMs may ask for or contain information which the user does not need for their use case",
            "DishonestProducers": "People producing\u00a0BOMs may not truthfully fill out all the required fields, but might instead just put in whatever garbage information will allow them to create the BOM",
            "AibomPointToDatabom": "AIBOMs should point to one or more DataBOMs",
            "MultipleDatasets": "ML Projects sometimes make use of multiple datasets",
            "DatasetPreprocessing": "Discusses how preprocessing datasets can affect BOMs",
            "BiasIdentification": "Discusses how to identify bias in ML models",
            "LightweightBom": "Discusses the need for BOMs to be lightweight",
            "MLVulnerabilityDatabase": "Discussing the possibility of a vulnerability database for machine learning, akin to CVE.",
            "Certification": "BOMs could help provide certain types of certification for software's security, licensing status, suitability for a certain purpose, etc.",
            "IndustryVsAcademia": "Discusses differences between industry and academia",
            "OpenSourceCommunity": "Discusses the possibility of an open source community based on BOM technology",
            "CpsStandardization": "Discusses different components in cyber-physical systems",
            "SystemFragility": "Discusses how certain changes can break systems, sometimes in dangerous ways",
            "Traceability": "Discusses the ability to locate the source of bugs and faults",
            "OpenSourceForTraining": "Open-source software is useful for training new developers (as opposed to immediately giving the closed-source, often more complicated software)",
            "CpsComponentIntegration": "Discusses how CPS components are integrated together",
            "OtherSourcesAvailable": "Other existing solutions may already serve as sources of information that would be contained in BOMs",
            "SoftwareInterlinkedWithHardware": "Discusses software that is closely tied to specific hardware",
            "SbomAndHbomTogether": "SBOMs and HBOMs might be included in the same document",
            "ComplianceDifficulties": "Discusses how compliance can be difficult to achieve",
            "Antipatterns": "Discusses antipatterns in which a system performs worse in the same environment",
            "CpsReproducibility": "Discussing replicating scenarios for CPS, particularly in the case of replicating errors",
            "SelfConfiguration": "Discusses the ability of systems to configure themselves in response to certain situations",
            "CpsConfigurations": "Discusses the configuration of CPS components",
            "CpsAttacks": "Discusses security risks and potential attacks on CPS components",
            "QualityAssurance": "Discusses how BOMs can be used for quality assurance purposes",
            "DataCentricSystems": "Discusses how data can be the most important element in certain systems",
            "CpsVulnerabilityDatabase": "Discusses the possibility of a vulnerability data for CPS",
            "Containerization": "Discusses how containerization can be useful and interact with BOMs",
            "IoTCloud": "Discusses how IoT devices interact with the cloud",
            "SimulationVsReality": "Discusses the challenges that arise from trying to apply predicted/simulated outcomes to the real world",
            "LessStructuredPackages": "Languages with less structured packages, e.g. C, may be more difficult to handle w/ SBOMs",
            "EffectiveUsageAnalysis": "Discuses identifying which dependencies are actually used by the software (rather than just being included and never used)",
            "NonPackageComponents": "Discusses the inclusion of code snippets (e.g. from StackOverflow) and other code pulled from outside sources as dependencies, even when they aren't part of a package",
            "PotentialForRegulation": "Future laws and regulations could impact how BOMs are created or used",
            "SbomCreatorLiability": "Discusses the potential liability of the creators of incorrect SBOMs",
            "SbomMaintenance": "Discusses the need to maintain SBOMs over time",
            "DatasetCreation": "Discusses how datasets are created",
            "SbomGranularity": "Discusses the level of detail at which SBOMs should describe software: package, file, subfile, etc."
        },
        "null": {}
    }
}