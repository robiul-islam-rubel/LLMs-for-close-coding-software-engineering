survey_response,llama_generated,human_codes
"The supply chain of CPS faces several challenges, including:

Unavailability of the physical devise(s) or component(s):
Testing, monitoring, and deploying CPS is challenging, and this is often due to the recurrent problem that the physical device (s) or component(s) are not available, or yet mature for testing purposes. Indeed, such components are often available only after the major release (still the system under test can be rather different that the one deployed in the customers side)

Lack of Standardization: CPS supply chains often use a wide range of technologies and standards, whit evolve over the time, making it challenging to ensure interoperability and compatibility across different components and vendors. This can lead to delays, increased costs, compatibility issues, and even physical crashes.

Ethical Concerns: CPS can collect and analyze vast amounts of data, raising ethical concerns about data privacy, surveillance, and the use of data for discriminatory or malicious purposes. While such data could be used for debugging purposes, they cannot easily accessed for the aforementioned reasons.

Regulatory Compliance: CPS is subject to numerous regulations and standards, including cybersecurity, data privacy, and safety regulations. Meeting these requirements can be challenging, especially for small and medium-sized enterprises (SMEs) with limited resources.

Security and SafetyRisks: CPS involve a vast network of connected devices, systems, and software, creating vulnerabilities for cyber attacks. Attackers can exploit weaknesses in the supply chain, including hardware, firmware, software, and network components, to compromise the entire system's security. We have seen how easy can be to attack cyber-physical systems in different ways and lead to harmful situations.

Probably a couple of recent works can make some of such challenges more detailed:
- Automated Identification and Qualitative Characterization of Safety Concerns Reported in UAV Software Platforms.    Transactions on Software Engineering and Methodology.
- An Empirical Characterization of Software Bugs in Open-Source Cyber-Physical Systems.    Journal of Systems & Software (JSS). 
- Continuous Integration and Delivery practices for Cyber-Physical systems: An interview-based study.    Transactions on Software Engineering and Methodology.  
","['UnavailabilityOfComponents', 'LackOfStandardization', 'EthicalConcerns']","['LackOfStandardization', 'EthicalConcerns', 'SafetyRisks', 'RegulatoryCompliance', 'Security', 'UnavailabilityOfComponents']"
"The main challenges that people currently face is related to security. In nowadays we are in world where the information is critical and thus cyber security is on of the key parts in any cyber-physical systems. 
Additionally due to the complexity that the systems now tend to be, not only to make sure that the software is protected but the components of any cyber-physical system are being more complex which may lead to a need for specialized people to manage these CPS.",['Security'],"['IncreasedComplexity', 'Security']"
"So I mean, it all depends on what you mean by cyber-physical systems.  If we use NIST's definition - Tightly coupled cyber and physical systems that exhibit this level of integrated intelligence are sometimes referred to as cyber-physical systems (CPS) - then we're mostly talking about systems that most people would call robots or automated systems.  Manufacturing robots are a good example, or self-driving cars, but also commodity electronics such as refrigerators or washing machines that have some level of software built in.  

So, when we talk about those kinds of devices, we have to acknowledge the kinds of supply chains that exist.  First, hardware supply chains.  Any such device will have some kind of standard commodity electronics, such as a processor (CPU/GPU), RAM, motherboard, and then some set of actuators that allow it to translate the software commands into physical motion of some kind.  Considering those components, the first major thing that comes to mind in terms of challenges is availability.  Ever since the pandemic, there has been a chip shortage, especially for less advanced commodity components (i.e. not a cutting edge Intel/AMD processor, but the kind of chip that would go into your car or washer).  This is why the CHIPS act happened, and other countries/organizations are taking similar steps (such as the EU).  I do believe there was a period where RAM was harder to get, but I believe that abated.  Similarly, I'm not familiar with any actuator shortages.  Which then brings me to the supply chain challenge of reliability.  What commonly happens, especially with commodity components, is the proliferation of sub-standard/knock-off electronics, especially on sites like Amazon.  And then there's the potential for intentional subversion, such as the story about how China planted a spy chip into Supermicro motherboards.  I don't think we ever got a full public resolution on that, and even if it didn't happen, it would be a potential issue to worry about from a supply chain standpoint.

Now, software supply chains.  So we're talking about the software that runs on the electronic components that commands the actuators to make the physical actions that the device/platform/robot is intended for.  Now, modern software stacks are quite complex, and for any given commodity device from washers up to self-driving cars, there's going to be at least some mix of proprietary and OSS software in the mix.  From a supply chain standpoint, this really means you have 2 concerns - how secure/reliable is the proprietary software (e.g., how much do you trust the vendor, do they have any recent issues); and how secure/reliable is the OSS (e.g. are you going to examine the code yourself, are there recent vulnerabilities that have been found (zero days or what have you), how often does the code base get updated, is there active development going on to keep the software secure).","['UnavailabilityOfComponents', 'Shortages']","['UnavailabilityOfComponents', 'Security', 'EthicalConcerns', 'IncreasedComplexity', 'HardwareReliability', 'UnderstandingSoftwareComponents', 'Shortages', 'DifferentCases']"
It is hard to validate the code and solution developed by other groups. Repeatability is low. ,"['UnderstandingSoftwareComponents', 'Reproducability']","['Reproducability', 'UnderstandingSoftwareComponents']"
"Depends on the kind and complexity of CPS. For example, production or power plants can be regarded as CPS, too. The supply chain of such CPS is much more challenging than for, e.g., measuring devices. 
The more individual CPS are, the more challenging the supply chain is in terms of identifying possible CPS that match the requirements and can be integrated in specified environment (e.g., w.r.t. interfaces, safety levels, parameterization).",['DifferentCases'],"['IncreasedComplexity', 'DifferentCases', 'LackOfStandardization']"
Lack of parts supply,"['UnavailabilityOfComponents', 'Shortages']",['Shortages']
